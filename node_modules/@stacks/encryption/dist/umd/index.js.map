{"version":3,"file":"index.js","mappings":"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","sources":["webpack://StacksEncryption/webpack/universalModuleDefinition","webpack://StacksEncryption/../../node_modules/@noble/hashes/_sha2.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/_u64.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/cryptoBrowser.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/hmac.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/pbkdf2.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/sha256.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/sha512.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/utils.js","webpack://StacksEncryption/../../node_modules/@scure/base/index.js","webpack://StacksEncryption/../../node_modules/@scure/bip39/index.js","webpack://StacksEncryption/../../node_modules/@scure/bip39/wordlists/english.js","webpack://StacksEncryption/../../node_modules/base-x/src/index.js","webpack://StacksEncryption/../../node_modules/base64-js/index.js","webpack://StacksEncryption/../../node_modules/bs58/index.js","webpack://StacksEncryption/../../node_modules/buffer/index.js","webpack://StacksEncryption/../../node_modules/ieee754/index.js","webpack://StacksEncryption/../../node_modules/safe-buffer/index.js","webpack://StacksEncryption/../../node_modules/varuint-bitcoin/index.js","webpack://StacksEncryption/webpack/bootstrap","webpack://StacksEncryption/webpack/runtime/compat get default export","webpack://StacksEncryption/webpack/runtime/define property getters","webpack://StacksEncryption/webpack/runtime/global","webpack://StacksEncryption/webpack/runtime/hasOwnProperty shorthand","webpack://StacksEncryption/webpack/runtime/make namespace object","webpack://StacksEncryption/webpack/runtime/node module decorator","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/cryptoBrowser.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/utils.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/hmac.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/_sha2.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/sha256.js","webpack://StacksEncryption/../../node_modules/@noble/secp256k1/lib/esm/index.js","webpack://StacksEncryption/../common/dist/esm/utils.js","webpack://StacksEncryption/../common/dist/esm/errors.js","webpack://StacksEncryption/../common/dist/esm/signatures.js","webpack://StacksEncryption/./src/cryptoUtils.ts","webpack://StacksEncryption/./src/aesCipher.ts","webpack://StacksEncryption/./src/hmacSha256.ts","webpack://StacksEncryption/../common/dist/esm/keys.js","webpack://StacksEncryption/../common/dist/esm/constants.js","webpack://StacksEncryption/../../node_modules/ripemd160-min/dist-esm/index.js","webpack://StacksEncryption/./src/hashRipemd160.ts","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/_u64.js","webpack://StacksEncryption/../../node_modules/@noble/hashes/esm/sha512.js","webpack://StacksEncryption/./src/sha2Hash.ts","webpack://StacksEncryption/./src/keys.ts","webpack://StacksEncryption/./src/messageSignature.ts","webpack://StacksEncryption/./src/utils.ts","webpack://StacksEncryption/./src/ec.ts","webpack://StacksEncryption/./src/cryptoRandom.ts","webpack://StacksEncryption/./src/pbkdf2.ts","webpack://StacksEncryption/./src/wallet.ts","webpack://StacksEncryption/./src/encryption.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"StacksEncryption\"] = factory();\n\telse\n\t\troot[\"StacksEncryption\"] = factory();\n})(this, () => {\nreturn ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        const { view, buffer, blockLen, finished } = this;\n        if (finished)\n            throw new Error('digest() was already called');\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length < this.outputLen)\n            throw new Error('_Sha2: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // NOTE: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64bit of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.add5H = exports.add5L = exports.add4H = exports.add4L = exports.add3H = exports.add3L = exports.add = exports.rotlBL = exports.rotlBH = exports.rotlSL = exports.rotlSH = exports.rotr32L = exports.rotr32H = exports.rotrBL = exports.rotrBH = exports.rotrSL = exports.rotrSH = exports.shrSL = exports.shrSH = exports.toBig = exports.split = exports.fromBig = void 0;\nconst U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexports.fromBig = fromBig;\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexports.split = split;\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\nexports.toBig = toBig;\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nexports.shrSH = shrSH;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.shrSL = shrSL;\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexports.rotrSH = rotrSH;\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\nexports.rotrSL = rotrSL;\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexports.rotrBH = rotrBH;\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\nexports.rotrBL = rotrBL;\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nexports.rotr32H = rotr32H;\nconst rotr32L = (h, l) => h;\nexports.rotr32L = rotr32L;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexports.rotlSH = rotlSH;\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\nexports.rotlSL = rotlSL;\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexports.rotlBH = rotlBH;\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\nexports.rotlBL = rotlBL;\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\nexports.add = add;\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexports.add3L = add3L;\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexports.add3H = add3H;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexports.add4L = add4L;\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexports.add4H = add4H;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexports.add5L = add5L;\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\nexports.add5H = add5H;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        (0, utils_js_1.assertHash)(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof utils_js_1.Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length !== this.outputLen)\n            throw new Error('HMAC: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2Async = exports.pbkdf2 = void 0;\nconst hmac_js_1 = require(\"./hmac.js\");\n// prettier-ignore\nconst utils_js_1 = require(\"./utils.js\");\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    (0, utils_js_1.assertHash)(hash);\n    const opts = (0, utils_js_1.checkOpts)({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    (0, utils_js_1.assertNumber)(c);\n    (0, utils_js_1.assertNumber)(dkLen);\n    (0, utils_js_1.assertNumber)(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = (0, utils_js_1.toBytes)(_password);\n    const salt = (0, utils_js_1.toBytes)(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac_js_1.hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nfunction pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2 = pbkdf2;\nasync function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = (0, utils_js_1.createView)(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await (0, utils_js_1.asyncLoop)(c - 1, asyncTick, (i) => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexports.pbkdf2Async = pbkdf2Async;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha384 = exports.sha512_256 = exports.sha512 = exports.SHA512 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst u64 = __importStar(require(\"./_u64.js\"));\nconst utils_js_1 = require(\"./utils.js\");\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nclass SHA512 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexports.SHA512 = SHA512;\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexports.sha512 = (0, utils_js_1.wrapConstructor)(() => new SHA512());\nexports.sha512_256 = (0, utils_js_1.wrapConstructor)(() => new SHA512_256());\nexports.sha384 = (0, utils_js_1.wrapConstructor)(() => new SHA384());\n","\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.assertHash = exports.assertBytes = exports.assertBool = exports.assertNumber = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianess.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte))\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// Currently avoid insertion of polyfills with packers (browserify/webpack/etc)\n// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here\nexports.nextTick = (() => {\n    const nodeRequire = typeof module !== 'undefined' &&\n        typeof module.require === 'function' &&\n        module.require.bind(module);\n    try {\n        if (nodeRequire) {\n            const { setImmediate } = nodeRequire('timers');\n            return () => new Promise((resolve) => setImmediate(resolve));\n        }\n    }\n    catch (e) { }\n    return () => new Promise((resolve) => setTimeout(resolve, 0));\n})();\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction assertBool(b) {\n    if (typeof b !== 'boolean') {\n        throw new Error(`Expected boolean, not ${b}`);\n    }\n}\nexports.assertBool = assertBool;\nfunction assertBytes(bytes, ...lengths) {\n    if (bytes instanceof Uint8Array && (!lengths.length || lengths.includes(bytes.length))) {\n        return;\n    }\n    throw new TypeError(`Expected ${lengths} bytes, not ${typeof bytes} with length=${bytes.length}`);\n}\nexports.assertBytes = assertBytes;\nfunction assertHash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    assertNumber(hash.outputLen);\n    assertNumber(hash.blockLen);\n}\nexports.assertHash = assertHash;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(def, _opts) {\n    if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts)))\n        throw new TypeError('Options should be object or undefined');\n    const opts = Object.assign(def, _opts);\n    return opts;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n","\"use strict\";\n/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bytes = exports.stringToBytes = exports.str = exports.bytesToString = exports.hex = exports.utf8 = exports.bech32m = exports.bech32 = exports.base58check = exports.base58xmr = exports.base58xrp = exports.base58flickr = exports.base58 = exports.base64url = exports.base64 = exports.base32crockford = exports.base32hex = exports.base32 = exports.base16 = exports.utils = exports.assertNumber = void 0;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexports.utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexports.base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexports.base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexports.base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexports.base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexports.base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexports.base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexports.base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexports.base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexports.base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexports.base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += exports.base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = exports.base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nconst base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), exports.base58);\nexports.base58check = base58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const [prefix, _words] = [str.slice(0, sepIndex), str.slice(sepIndex + 1)];\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexports.bech32 = genBech32('bech32');\nexports.bech32m = genBech32('bech32m');\nexports.utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexports.hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8: exports.utf8, hex: exports.hex, base16: exports.base16, base32: exports.base32, base64: exports.base64, base64url: exports.base64url, base58: exports.base58, base58xmr: exports.base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nconst bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexports.bytesToString = bytesToString;\nexports.str = exports.bytesToString;\nconst stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexports.stringToBytes = stringToBytes;\nexports.bytes = exports.stringToBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicToSeedSync = exports.mnemonicToSeed = exports.validateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.generateMnemonic = void 0;\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst base_1 = require(\"@scure/base\");\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    (0, utils_1.assertBytes)(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction generateMnemonic(wordlist, strength = 128) {\n    (0, utils_1.assertNumber)(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0, utils_1.randomBytes)(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([((0, sha256_1.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2 ** 11 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return base_1.utils.chain(base_1.utils.checksum(1, calcChecksum), base_1.utils.radix2(11, true), base_1.utils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeed(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\nexports.wordlist = `abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo`.split('\\n');\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\n\n// Number.MAX_SAFE_INTEGER\nvar MAX_SAFE_INTEGER = 9007199254740991\n\nfunction checkUInt53 (n) {\n  if (n < 0 || n > MAX_SAFE_INTEGER || n % 1 !== 0) throw new RangeError('value out of range')\n}\n\nfunction encode (number, buffer, offset) {\n  checkUInt53(number)\n\n  if (!buffer) buffer = Buffer.allocUnsafe(encodingLength(number))\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance')\n  if (!offset) offset = 0\n\n  // 8 bit\n  if (number < 0xfd) {\n    buffer.writeUInt8(number, offset)\n    encode.bytes = 1\n\n  // 16 bit\n  } else if (number <= 0xffff) {\n    buffer.writeUInt8(0xfd, offset)\n    buffer.writeUInt16LE(number, offset + 1)\n    encode.bytes = 3\n\n  // 32 bit\n  } else if (number <= 0xffffffff) {\n    buffer.writeUInt8(0xfe, offset)\n    buffer.writeUInt32LE(number, offset + 1)\n    encode.bytes = 5\n\n  // 64 bit\n  } else {\n    buffer.writeUInt8(0xff, offset)\n    buffer.writeUInt32LE(number >>> 0, offset + 1)\n    buffer.writeUInt32LE((number / 0x100000000) | 0, offset + 5)\n    encode.bytes = 9\n  }\n\n  return buffer\n}\n\nfunction decode (buffer, offset) {\n  if (!Buffer.isBuffer(buffer)) throw new TypeError('buffer must be a Buffer instance')\n  if (!offset) offset = 0\n\n  var first = buffer.readUInt8(offset)\n\n  // 8 bit\n  if (first < 0xfd) {\n    decode.bytes = 1\n    return first\n\n  // 16 bit\n  } else if (first === 0xfd) {\n    decode.bytes = 3\n    return buffer.readUInt16LE(offset + 1)\n\n  // 32 bit\n  } else if (first === 0xfe) {\n    decode.bytes = 5\n    return buffer.readUInt32LE(offset + 1)\n\n  // 64 bit\n  } else {\n    decode.bytes = 9\n    var lo = buffer.readUInt32LE(offset + 1)\n    var hi = buffer.readUInt32LE(offset + 5)\n    var number = hi * 0x0100000000 + lo\n    checkUInt53(number)\n\n    return number\n  }\n}\n\nfunction encodingLength (number) {\n  checkUInt53(number)\n\n  return (\n    number < 0xfd ? 1\n      : number <= 0xffff ? 3\n        : number <= 0xffffffff ? 5\n          : 9\n  )\n}\n\nmodule.exports = { encode: encode, decode: decode, encodingLength: encodingLength }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianess.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte))\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// Currently avoid insertion of polyfills with packers (browserify/webpack/etc)\n// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here\nexport const nextTick = (() => {\n    const nodeRequire = typeof module !== 'undefined' &&\n        typeof module.require === 'function' &&\n        module.require.bind(module);\n    try {\n        if (nodeRequire) {\n            const { setImmediate } = nodeRequire('timers');\n            return () => new Promise((resolve) => setImmediate(resolve));\n        }\n    }\n    catch (e) { }\n    return () => new Promise((resolve) => setTimeout(resolve, 0));\n})();\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function assertBool(b) {\n    if (typeof b !== 'boolean') {\n        throw new Error(`Expected boolean, not ${b}`);\n    }\n}\nexport function assertBytes(bytes, ...lengths) {\n    if (bytes instanceof Uint8Array && (!lengths.length || lengths.includes(bytes.length))) {\n        return;\n    }\n    throw new TypeError(`Expected ${lengths} bytes, not ${typeof bytes} with length=${bytes.length}`);\n}\nexport function assertHash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    assertNumber(hash.outputLen);\n    assertNumber(hash.blockLen);\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(def, _opts) {\n    if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts)))\n        throw new TypeError('Options should be object or undefined');\n    const opts = Object.assign(def, _opts);\n    return opts;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","import { assertHash, Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length !== this.outputLen)\n            throw new Error('HMAC: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n","import { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        const { view, buffer, blockLen, finished } = this;\n        if (finished)\n            throw new Error('digest() was already called');\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length < this.outputLen)\n            throw new Error('_Sha2: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // NOTE: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64bit of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst POW_2_256 = _2n ** BigInt(256);\nconst CURVE = {\n    a: _0n,\n    b: BigInt(7),\n    P: POW_2_256 - _2n ** BigInt(32) - BigInt(977),\n    n: POW_2_256 - BigInt('432420386565659656852420866394968145599'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n};\nexport { CURVE };\nfunction weistrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 ** _2n);\n        const B = mod(Y1 ** _2n);\n        const C = mod(B ** _2n);\n        const D = mod(_2n * (mod((X1 + B) ** _2n) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E ** _2n);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        if (!(other instanceof JacobianPoint))\n            throw new TypeError('JacobianPoint expected');\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 ** _2n);\n        const Z2Z2 = mod(Z2 ** _2n);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H ** _2n);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r ** _2n - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        let n = normalizeScalar(scalar);\n        const G = JacobianPoint.BASE;\n        const P0 = JacobianPoint.ZERO;\n        if (n === _0n)\n            return P0;\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.ZERO;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            if (wbits === 0) {\n                let pr = precomputes[offset];\n                if (window % 2)\n                    pr = pr.negate();\n                f = f.add(pr);\n            }\n            else {\n                let cached = precomputes[offset + Math.abs(wbits) - 1];\n                if (wbits < 0)\n                    cached = cached.negate();\n                p = p.add(cached);\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = splitScalarEndo(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new JacobianPoint(mod(k2p.x * CURVE.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ = invert(this.z)) {\n        const { x, y, z } = this;\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weistrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, 33));\n        const y = bytesToNumber(bytes.subarray(33, 65));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === 32 || (len === 33 && (header === 0x02 || header === 0x03))) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === 65 && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-33 compressed bytes or 65 uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        msgHash = ensureBytes(msgHash);\n        const h = truncateHash(msgHash);\n        const { r, s } = normalizeSignature(signature);\n        if (recovery !== 0 && recovery !== 1) {\n            throw new Error('Cannot recover signature: invalid recovery bit');\n        }\n        if (h === _0n)\n            throw new Error('Cannot recover signature: msgHash cannot be 0');\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(r));\n        const { n } = CURVE;\n        const rinv = invert(r, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.y & _1n ? '03' : '02';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weistrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = isUint8a(hex);\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = isUint8a(hex);\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, CURVE.n - this.s) : this;\n    }\n    toDERRawBytes(isCompressed = false) {\n        return hexToBytes(this.toDERHex(isCompressed));\n    }\n    toDERHex(isCompressed = false) {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        if (isCompressed)\n            return sHex;\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const rLen = numberToHexUnpadded(rHex.length / 2);\n        const sLen = numberToHexUnpadded(sHex.length / 2);\n        const length = numberToHexUnpadded(rHex.length / 2 + sHex.length / 2 + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every(isUint8a))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nfunction isUint8a(bytes) {\n    return bytes instanceof Uint8Array;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction numTo32bStr(num) {\n    if (num > POW_2_256)\n        throw new Error('Expected number < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    return hexToBytes(numTo32bStr(num));\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    return pow2(t2, _2n);\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst POW_2_128 = _2n ** BigInt(128);\nfunction splitScalarEndo(k) {\n    const { n } = CURVE;\n    const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n    const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n    const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n    const b2 = a1;\n    const c1 = divNearest(b2 * k, n);\n    const c2 = divNearest(-b1 * k, n);\n    let k1 = mod(k - c1 * a1 - c2 * a2, n);\n    let k2 = mod(-c1 * b1 - c2 * b2, n);\n    const k1neg = k1 > POW_2_128;\n    const k2neg = k2 > POW_2_128;\n    if (k1neg)\n        k1 = n - k1;\n    if (k2neg)\n        k2 = n - k2;\n    if (k1 > POW_2_128 || k2 > POW_2_128) {\n        throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n    }\n    return { k1neg, k1, k2neg, k2 };\n}\nfunction truncateHash(hash) {\n    const { n } = CURVE;\n    const byteLength = hash.length;\n    const delta = byteLength * 8 - 256;\n    let h = bytesToNumber(hash);\n    if (delta > 0)\n        h = h >> BigInt(delta);\n    if (h >= n)\n        h -= n;\n    return h;\n}\nclass HmacDrbg {\n    constructor() {\n        this.v = new Uint8Array(32).fill(1);\n        this.k = new Uint8Array(32).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        if (typeof utils.hmacSha256Sync !== 'function')\n            throw new Error('utils.hmacSha256Sync is undefined, you need to set it');\n        const res = utils.hmacSha256Sync(this.k, ...values);\n        if (res instanceof Promise)\n            throw new Error('To use sync sign(), ensure utils.hmacSha256 is sync');\n        return res;\n    }\n    incr() {\n        if (this.counter >= 1000) {\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        }\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        this.v = await this.hmac(this.v);\n        return this.v;\n    }\n    generateSync() {\n        this.incr();\n        this.v = this.hmacSync(this.v);\n        return this.v;\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d) {\n    const k = bytesToNumber(kBytes);\n    if (!isWithinCurveOrder(k))\n        return;\n    const { n } = CURVE;\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(invert(k, n) * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    const sig = new Signature(r, s);\n    const recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 64)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (isUint8a(key)) {\n        if (key.length !== 32)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isPub(item) {\n    const arr = isUint8a(item);\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === 33 || len === 65;\n    if (str)\n        return len === 66 || len === 130;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > 32 ? bytes.slice(0, 32) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    const hex = numTo32bStr(num);\n    return hexToBytes(hex);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(32);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== 32)\n            throw new Error('sign: Expected 32 bytes of extra data');\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    let { sig, recovery } = recSig;\n    const { canonical, der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    if (canonical && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    await drbg.reseed(seed);\n    while (!(sig = kmdToSig(await drbg.generate(), m, d)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    let sig;\n    const drbg = new HmacDrbg();\n    drbg.reseedSync(seed);\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    if (h === _0n)\n        return false;\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nasync function taggedHash(tag, ...messages) {\n    const tagB = new Uint8Array(tag.split('').map((c) => c.charCodeAt(0)));\n    const tagH = await utils.sha256(tagB);\n    const h = await utils.sha256(concatBytes(tagH, tagH, ...messages));\n    return bytesToNumber(h);\n}\nasync function createChallenge(x, P, message) {\n    const rx = numTo32b(x);\n    const t = await taggedHash('BIP0340/challenge', rx, P.toRawX(), message);\n    return mod(t, CURVE.n);\n}\nfunction hasEvenY(point) {\n    return (point.y & _1n) === _0n;\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nasync function schnorrSign(message, privateKey, auxRand = utils.randomBytes()) {\n    if (message == null)\n        throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n    const { n } = CURVE;\n    const m = ensureBytes(message);\n    const d0 = normalizePrivateKey(privateKey);\n    const rand = ensureBytes(auxRand);\n    if (rand.length !== 32)\n        throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    const P = Point.fromPrivateKey(d0);\n    const d = hasEvenY(P) ? d0 : n - d0;\n    const t0h = await taggedHash('BIP0340/aux', rand);\n    const t = d ^ t0h;\n    const k0h = await taggedHash('BIP0340/nonce', numTo32b(t), P.toRawX(), m);\n    const k0 = mod(k0h, n);\n    if (k0 === _0n)\n        throw new Error('sign: Creation of signature failed. k is zero');\n    const R = Point.fromPrivateKey(k0);\n    const k = hasEvenY(R) ? k0 : n - k0;\n    const e = await createChallenge(R.x, P, m);\n    const sig = new SchnorrSignature(R.x, mod(k + e * d, n)).toRawBytes();\n    const isValid = await schnorrVerify(sig, m, P.toRawX());\n    if (!isValid)\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    let sig;\n    try {\n        sig = raw ? signature : SchnorrSignature.fromHex(signature);\n        if (raw)\n            sig.assertValidity();\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    const m = ensureBytes(message);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const e = await createChallenge(r, P, m);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !hasEvenY(R) || R.x !== r)\n        return false;\n    return true;\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nexport const utils = {\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        if (hash.length < 40 || hash.length > 1024)\n            throw new Error('Expected 40-1024 bytes of private key as per FIPS 186');\n        const num = mod(bytesToNumber(hash), CURVE.n);\n        if (num === _0n || num === _1n)\n            throw new Error('Invalid private key');\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => {\n        return utils.hashToPrivateKey(utils.randomBytes(40));\n    },\n    bytesToHex,\n    mod,\n    sha256: async (message) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', message.buffer);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            return Uint8Array.from(createHash('sha256').update(message).digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n};\n","import { Logger } from './logger';\nimport { Buffer as BufferPolyfill } from 'buffer/';\nconst AvailableBufferModule = typeof Buffer !== 'undefined' ? Buffer : BufferPolyfill;\nexport { AvailableBufferModule as Buffer };\nexport const BLOCKSTACK_HANDLER = 'blockstack';\nexport function nextYear() {\n    return new Date(new Date().setFullYear(new Date().getFullYear() + 1));\n}\nexport function nextMonth() {\n    return new Date(new Date().setMonth(new Date().getMonth() + 1));\n}\nexport function nextHour() {\n    return new Date(new Date().setHours(new Date().getHours() + 1));\n}\nexport function megabytesToBytes(megabytes) {\n    if (!Number.isFinite(megabytes)) {\n        return 0;\n    }\n    return Math.floor(megabytes * 1024 * 1024);\n}\nexport function getAesCbcOutputLength(inputByteLength) {\n    const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n    return cipherTextLength;\n}\nexport function getBase64OutputLength(inputByteLength) {\n    const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n    return encodedLength;\n}\nexport function updateQueryStringParameter(uri, key, value) {\n    const re = new RegExp(`([?&])${key}=.*?(&|$)`, 'i');\n    const separator = uri.indexOf('?') !== -1 ? '&' : '?';\n    if (uri.match(re)) {\n        return uri.replace(re, `$1${key}=${value}$2`);\n    }\n    else {\n        return `${uri}${separator}${key}=${value}`;\n    }\n}\nexport function isLaterVersion(v1, v2) {\n    if (v1 === undefined || v1 === '') {\n        v1 = '0.0.0';\n    }\n    if (v2 === undefined || v1 === '') {\n        v2 = '0.0.0';\n    }\n    const v1tuple = v1.split('.').map(x => parseInt(x, 10));\n    const v2tuple = v2.split('.').map(x => parseInt(x, 10));\n    for (let index = 0; index < v2.length; index++) {\n        if (index >= v1.length) {\n            v2tuple.push(0);\n        }\n        if (v1tuple[index] < v2tuple[index]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function makeUUID4() {\n    let d = new Date().getTime();\n    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now();\n    }\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n        const r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n}\nexport function isSameOriginAbsoluteUrl(uri1, uri2) {\n    try {\n        const parsedUri1 = new URL(uri1);\n        const parsedUri2 = new URL(uri2);\n        const port1 = parseInt(parsedUri1.port || '0', 10) | 0 || (parsedUri1.protocol === 'https:' ? 443 : 80);\n        const port2 = parseInt(parsedUri2.port || '0', 10) | 0 || (parsedUri2.protocol === 'https:' ? 443 : 80);\n        const match = {\n            scheme: parsedUri1.protocol === parsedUri2.protocol,\n            hostname: parsedUri1.hostname === parsedUri2.hostname,\n            port: port1 === port2,\n            absolute: (uri1.includes('http://') || uri1.includes('https://')) &&\n                (uri2.includes('http://') || uri2.includes('https://')),\n        };\n        return match.scheme && match.hostname && match.port && match.absolute;\n    }\n    catch (error) {\n        console.log(error);\n        console.log('Parsing error in same URL origin check');\n        return false;\n    }\n}\nexport function getGlobalScope() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('Unexpected runtime environment - no supported global scope (`window`, `self`, `global`) available');\n}\nfunction getAPIUsageErrorMessage(scopeObject, apiName, usageDesc) {\n    if (usageDesc) {\n        return `Use of '${usageDesc}' requires \\`${apiName}\\` which is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n    else {\n        return `\\`${apiName}\\` is unavailable on the '${scopeObject}' object within the currently executing environment.`;\n    }\n}\nexport function getGlobalObject(name, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope = undefined;\n    try {\n        globalScope = getGlobalScope();\n        if (globalScope) {\n            const obj = globalScope[name];\n            if (obj) {\n                return obj;\n            }\n        }\n    }\n    catch (error) {\n        Logger.error(`Error getting object '${name}' from global scope '${globalScope}': ${error}`);\n    }\n    if (throwIfUnavailable) {\n        const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n        Logger.error(errMsg);\n        throw new Error(errMsg);\n    }\n    if (returnEmptyObject) {\n        return {};\n    }\n    return undefined;\n}\nexport function getGlobalObjects(names, { throwIfUnavailable, usageDesc, returnEmptyObject } = {}) {\n    let globalScope;\n    try {\n        globalScope = getGlobalScope();\n    }\n    catch (error) {\n        Logger.error(`Error getting global scope: ${error}`);\n        if (throwIfUnavailable) {\n            const errMsg = getAPIUsageErrorMessage(globalScope, names[0].toString(), usageDesc);\n            Logger.error(errMsg);\n            throw errMsg;\n        }\n        else if (returnEmptyObject) {\n            globalScope = {};\n        }\n    }\n    const result = {};\n    for (let i = 0; i < names.length; i++) {\n        const name = names[i];\n        try {\n            if (globalScope) {\n                const obj = globalScope[name];\n                if (obj) {\n                    result[name] = obj;\n                }\n                else if (throwIfUnavailable) {\n                    const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                    Logger.error(errMsg);\n                    throw new Error(errMsg);\n                }\n                else if (returnEmptyObject) {\n                    result[name] = {};\n                }\n            }\n        }\n        catch (error) {\n            if (throwIfUnavailable) {\n                const errMsg = getAPIUsageErrorMessage(globalScope, name.toString(), usageDesc);\n                Logger.error(errMsg);\n                throw new Error(errMsg);\n            }\n        }\n    }\n    return result;\n}\nexport function intToBytes(value, signed, byteLength) {\n    return toBuffer(intToBigInt(value, signed), byteLength);\n}\nexport function intToBigInt(value, signed) {\n    let parsedValue = value;\n    if (typeof parsedValue === 'number') {\n        if (!Number.isInteger(parsedValue)) {\n            throw new RangeError(`Invalid value. Values of type 'number' must be an integer.`);\n        }\n        return BigInt(parsedValue);\n    }\n    if (typeof parsedValue === 'string') {\n        if (parsedValue.toLowerCase().startsWith('0x')) {\n            let hex = parsedValue.slice(2);\n            hex = hex.padStart(hex.length + (hex.length % 2), '0');\n            parsedValue = AvailableBufferModule.from(hex, 'hex');\n        }\n        else {\n            try {\n                return BigInt(parsedValue);\n            }\n            catch (error) {\n                if (error instanceof SyntaxError) {\n                    throw new RangeError(`Invalid value. String integer '${parsedValue}' is not finite.`);\n                }\n            }\n        }\n    }\n    if (typeof parsedValue === 'bigint') {\n        return parsedValue;\n    }\n    if (parsedValue instanceof Uint8Array || AvailableBufferModule.isBuffer(parsedValue)) {\n        if (signed) {\n            const bn = fromTwos(BigInt(`0x${bytesToHex(parsedValue)}`), BigInt(parsedValue.byteLength * 8));\n            return BigInt(bn.toString());\n        }\n        else {\n            return BigInt(`0x${bytesToHex(parsedValue)}`);\n        }\n    }\n    if (parsedValue != null &&\n        typeof parsedValue === 'object' &&\n        parsedValue.constructor.name === 'BN') {\n        return BigInt(parsedValue.toString());\n    }\n    throw new TypeError(`Invalid value type. Must be a number, bigint, integer-string, hex-string, or Buffer.`);\n}\nexport function with0x(value) {\n    return !value.startsWith('0x') ? `0x${value}` : value;\n}\nexport function hexToBigInt(hex) {\n    if (typeof hex !== 'string')\n        throw new TypeError(`hexToBigInt: expected string, got ${typeof hex}`);\n    return BigInt(`0x${hex}`);\n}\nexport function intToHex(integer, lengthBytes = 8) {\n    const value = typeof integer === 'bigint' ? integer : intToBigInt(integer, false);\n    return value.toString(16).padStart(lengthBytes * 2, '0');\n}\nexport function hexToInt(hex) {\n    return parseInt(hex, 16);\n}\nexport function toBuffer(value, length = 16) {\n    const hex = intToHex(value, length);\n    return AvailableBufferModule.from(hexToBytes(hex));\n}\nexport function toTwos(value, width) {\n    if (value < -(BigInt(1) << (width - BigInt(1))) ||\n        (BigInt(1) << (width - BigInt(1))) - BigInt(1) < value) {\n        throw `Unable to represent integer in width: ${width}`;\n    }\n    if (value >= BigInt(0)) {\n        return BigInt(value);\n    }\n    return value + (BigInt(1) << width);\n}\nfunction nthBit(value, n) {\n    return value & (BigInt(1) << n);\n}\nexport function fromTwos(value, width) {\n    if (nthBit(value, width - BigInt(1))) {\n        return value - (BigInt(1) << width);\n    }\n    return value;\n}\nconst hexes = Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (const u of uint8a) {\n        hex += hexes[u];\n    }\n    return hex;\n}\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError(`hexToBytes: expected string, got ${typeof hex}`);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexport function concatBytes(...arrays) {\n    if (!arrays.every(a => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n//# sourceMappingURL=utils.js.map","export const ERROR_CODES = {\n    MISSING_PARAMETER: 'missing_parameter',\n    REMOTE_SERVICE_ERROR: 'remote_service_error',\n    INVALID_STATE: 'invalid_state',\n    NO_SESSION_DATA: 'no_session_data',\n    DOES_NOT_EXIST: 'does_not_exist',\n    FAILED_DECRYPTION_ERROR: 'failed_decryption_error',\n    INVALID_DID_ERROR: 'invalid_did_error',\n    NOT_ENOUGH_FUNDS_ERROR: 'not_enough_error',\n    INVALID_AMOUNT_ERROR: 'invalid_amount_error',\n    LOGIN_FAILED_ERROR: 'login_failed',\n    SIGNATURE_VERIFICATION_ERROR: 'signature_verification_failure',\n    CONFLICT_ERROR: 'conflict_error',\n    NOT_ENOUGH_PROOF_ERROR: 'not_enough_proof_error',\n    BAD_PATH_ERROR: 'bad_path_error',\n    VALIDATION_ERROR: 'validation_error',\n    PAYLOAD_TOO_LARGE_ERROR: 'payload_too_large_error',\n    PRECONDITION_FAILED_ERROR: 'precondition_failed_error',\n    UNKNOWN: 'unknown',\n};\nObject.freeze(ERROR_CODES);\nexport class BlockstackError extends Error {\n    constructor(error) {\n        super();\n        let message = error.message;\n        let bugDetails = `Error Code: ${error.code}`;\n        let stack = this.stack;\n        if (!stack) {\n            try {\n                throw new Error();\n            }\n            catch (e) {\n                stack = e.stack;\n            }\n        }\n        else {\n            bugDetails += `Stack Trace:\\n${stack}`;\n        }\n        message += `\\nIf you believe this exception is caused by a bug in stacks.js,\n      please file a bug report: https://github.com/blockstack/stacks.js/issues\\n\\n${bugDetails}`;\n        this.message = message;\n        this.code = error.code;\n        this.parameter = error.parameter ? error.parameter : undefined;\n    }\n    toString() {\n        return `${super.toString()}\n    code: ${this.code} param: ${this.parameter ? this.parameter : 'n/a'}`;\n    }\n}\nexport class InvalidParameterError extends BlockstackError {\n    constructor(parameter, message = '') {\n        super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n        this.name = 'MissingParametersError';\n    }\n}\nexport class MissingParameterError extends BlockstackError {\n    constructor(parameter, message = '') {\n        super({ code: ERROR_CODES.MISSING_PARAMETER, message, parameter });\n        this.name = 'MissingParametersError';\n    }\n}\nexport class RemoteServiceError extends BlockstackError {\n    constructor(response, message = '') {\n        super({ code: ERROR_CODES.REMOTE_SERVICE_ERROR, message });\n        this.response = response;\n    }\n}\nexport class InvalidDIDError extends BlockstackError {\n    constructor(message = '') {\n        super({ code: ERROR_CODES.INVALID_DID_ERROR, message });\n        this.name = 'InvalidDIDError';\n    }\n}\nexport class NotEnoughFundsError extends BlockstackError {\n    constructor(leftToFund) {\n        const message = `Not enough UTXOs to fund. Left to fund: ${leftToFund}`;\n        super({ code: ERROR_CODES.NOT_ENOUGH_FUNDS_ERROR, message });\n        this.leftToFund = leftToFund;\n        this.name = 'NotEnoughFundsError';\n        this.message = message;\n    }\n}\nexport class InvalidAmountError extends BlockstackError {\n    constructor(fees, specifiedAmount) {\n        const message = `Not enough coin to fund fees transaction fees. Fees would be ${fees},` +\n            ` specified spend is  ${specifiedAmount}`;\n        super({ code: ERROR_CODES.INVALID_AMOUNT_ERROR, message });\n        this.specifiedAmount = specifiedAmount;\n        this.fees = fees;\n        this.name = 'InvalidAmountError';\n        this.message = message;\n    }\n}\nexport class LoginFailedError extends BlockstackError {\n    constructor(reason) {\n        const message = `Failed to login: ${reason}`;\n        super({ code: ERROR_CODES.LOGIN_FAILED_ERROR, message });\n        this.message = message;\n        this.name = 'LoginFailedError';\n    }\n}\nexport class SignatureVerificationError extends BlockstackError {\n    constructor(reason) {\n        const message = `Failed to verify signature: ${reason}`;\n        super({ code: ERROR_CODES.SIGNATURE_VERIFICATION_ERROR, message });\n        this.message = message;\n        this.name = 'SignatureVerificationError';\n    }\n}\nexport class FailedDecryptionError extends BlockstackError {\n    constructor(message = 'Unable to decrypt cipher object.') {\n        super({ code: ERROR_CODES.FAILED_DECRYPTION_ERROR, message });\n        this.message = message;\n        this.name = 'FailedDecryptionError';\n    }\n}\nexport class InvalidStateError extends BlockstackError {\n    constructor(message) {\n        super({ code: ERROR_CODES.INVALID_STATE, message });\n        this.message = message;\n        this.name = 'InvalidStateError';\n    }\n}\nexport class NoSessionDataError extends BlockstackError {\n    constructor(message) {\n        super({ code: ERROR_CODES.INVALID_STATE, message });\n        this.message = message;\n        this.name = 'NoSessionDataError';\n    }\n}\nexport class GaiaHubError extends BlockstackError {\n    constructor(error, response) {\n        super(error);\n        if (response) {\n            this.hubError = {\n                statusCode: response.status,\n                statusText: response.statusText,\n            };\n            if (typeof response.body === 'string') {\n                this.hubError.message = response.body;\n            }\n            else if (typeof response.body === 'object') {\n                Object.assign(this.hubError, response.body);\n            }\n        }\n    }\n}\nexport class DoesNotExist extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.DOES_NOT_EXIST }, response);\n        this.name = 'DoesNotExist';\n    }\n}\nexport class ConflictError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.CONFLICT_ERROR }, response);\n        this.name = 'ConflictError';\n    }\n}\nexport class NotEnoughProofError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.NOT_ENOUGH_PROOF_ERROR }, response);\n        this.name = 'NotEnoughProofError';\n    }\n}\nexport class BadPathError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.BAD_PATH_ERROR }, response);\n        this.name = 'BadPathError';\n    }\n}\nexport class ValidationError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.VALIDATION_ERROR }, response);\n        this.name = 'ValidationError';\n    }\n}\nexport class PayloadTooLargeError extends GaiaHubError {\n    constructor(message, response, maxUploadByteSize) {\n        super({ message, code: ERROR_CODES.PAYLOAD_TOO_LARGE_ERROR }, response);\n        this.name = 'PayloadTooLargeError';\n        this.maxUploadByteSize = maxUploadByteSize;\n    }\n}\nexport class PreconditionFailedError extends GaiaHubError {\n    constructor(message, response) {\n        super({ message, code: ERROR_CODES.PRECONDITION_FAILED_ERROR }, response);\n        this.name = 'PreconditionFailedError';\n    }\n}\n//# sourceMappingURL=errors.js.map","import { hexToInt } from './utils';\nconst COORDINATE_BYTES = 32;\nexport function parseRecoverableSignatureVrs(signature) {\n    if (signature.length < COORDINATE_BYTES * 2 * 2 + 1) {\n        throw new Error('Invalid signature');\n    }\n    const recoveryIdHex = signature.slice(0, 2);\n    const r = signature.slice(2, 2 + COORDINATE_BYTES * 2);\n    const s = signature.slice(2 + COORDINATE_BYTES * 2);\n    return {\n        recoveryId: hexToInt(recoveryIdHex),\n        r,\n        s,\n    };\n}\nexport function signatureVrsToRsv(signature) {\n    return signature.slice(2) + signature.slice(0, 2);\n}\nexport function signatureRsvToVrs(signature) {\n    return signature.slice(-2) + signature.slice(0, -2);\n}\n//# sourceMappingURL=signatures.js.map","// @ts-ignore\nimport { Buffer } from '@stacks/common';\nexport function isSubtleCryptoAvailable(): boolean {\n  return typeof crypto !== 'undefined' && typeof crypto.subtle !== 'undefined';\n}\n\nexport function isNodeCryptoAvailable<T>(\n  withFeature: (nodeCrypto: typeof import('crypto')) => boolean | T\n): false | T;\nexport function isNodeCryptoAvailable<T>(\n  withFeature?: (nodeCrypto: typeof import('crypto')) => boolean | T\n): boolean | T {\n  try {\n    const resolvedResult = require.resolve('crypto');\n    if (!resolvedResult) {\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const cryptoModule = require('crypto') as typeof import('crypto');\n    if (!cryptoModule) {\n      return false;\n    }\n    if (withFeature) {\n      const features = withFeature(cryptoModule);\n      return features;\n    }\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const NO_CRYPTO_LIB =\n  'Crypto lib not found. Either the WebCrypto \"crypto.subtle\" or Node.js \"crypto\" module must be available.';\n\nexport type TriplesecDecryptSignature = (\n  arg: { data: Buffer; key: Buffer },\n  cb: (err: Error | null, buff: Buffer | null) => void\n) => void;\n\nexport interface WebCryptoLib {\n  lib: SubtleCrypto;\n  name: 'subtleCrypto';\n}\n\nexport interface NodeCryptoLib {\n  lib: typeof import('crypto');\n  name: 'nodeCrypto';\n}\n\n// Make async for future version which may lazy load.\n// eslint-disable-next-line @typescript-eslint/require-await\nexport async function getCryptoLib(): Promise<WebCryptoLib | NodeCryptoLib> {\n  if (isSubtleCryptoAvailable()) {\n    return {\n      lib: crypto.subtle,\n      name: 'subtleCrypto',\n    };\n  } else {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const nodeCrypto = require('crypto') as typeof import('crypto');\n      return {\n        lib: nodeCrypto,\n        name: 'nodeCrypto',\n      };\n    } catch (error) {\n      throw new Error(NO_CRYPTO_LIB);\n    }\n  }\n}\n","import { Buffer } from '@stacks/common';\nimport { getCryptoLib } from './cryptoUtils';\n\ntype NodeCryptoCreateCipher = typeof import('crypto').createCipheriv;\ntype NodeCryptoCreateDecipher = typeof import('crypto').createDecipheriv;\n\nexport type CipherAlgorithm = 'aes-256-cbc' | 'aes-128-cbc';\n\nexport interface AesCipher {\n  encrypt(algorithm: CipherAlgorithm, key: Buffer, iv: Buffer, data: Buffer): Promise<Buffer>;\n\n  decrypt(algorithm: CipherAlgorithm, key: Buffer, iv: Buffer, data: Buffer): Promise<Buffer>;\n}\n\nexport class NodeCryptoAesCipher implements AesCipher {\n  createCipher: NodeCryptoCreateCipher;\n\n  createDecipher: NodeCryptoCreateDecipher;\n\n  constructor(createCipher: NodeCryptoCreateCipher, createDecipher: NodeCryptoCreateDecipher) {\n    this.createCipher = createCipher;\n    this.createDecipher = createDecipher;\n  }\n\n  async encrypt(\n    algorithm: CipherAlgorithm,\n    key: Buffer,\n    iv: Buffer,\n    data: Buffer\n  ): Promise<Buffer> {\n    if (algorithm !== 'aes-128-cbc' && algorithm !== 'aes-256-cbc') {\n      throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n    }\n    const cipher = this.createCipher(algorithm, key, iv);\n    const result = Buffer.concat([cipher.update(data), cipher.final()]);\n    return Promise.resolve(result);\n  }\n\n  async decrypt(\n    algorithm: CipherAlgorithm,\n    key: Buffer,\n    iv: Buffer,\n    data: Buffer\n  ): Promise<Buffer> {\n    if (algorithm !== 'aes-128-cbc' && algorithm !== 'aes-256-cbc') {\n      throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n    }\n    const cipher = this.createDecipher(algorithm, key, iv);\n    const result = Buffer.concat([cipher.update(data), cipher.final()]);\n    return Promise.resolve(result);\n  }\n}\n\nexport class WebCryptoAesCipher implements AesCipher {\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async encrypt(\n    algorithm: CipherAlgorithm,\n    key: Buffer,\n    iv: Buffer,\n    data: Buffer\n  ): Promise<Buffer> {\n    let algo: string;\n    let length: number;\n    if (algorithm === 'aes-128-cbc') {\n      algo = 'AES-CBC';\n      length = 128;\n    } else if (algorithm === 'aes-256-cbc') {\n      algo = 'AES-CBC';\n      length = 256;\n    } else {\n      throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n    }\n    const cryptoKey = await this.subtleCrypto.importKey('raw', key, { name: algo, length }, false, [\n      'encrypt',\n    ]);\n    const result = await this.subtleCrypto.encrypt({ name: algo, iv }, cryptoKey, data);\n    return Buffer.from(result);\n  }\n\n  async decrypt(\n    algorithm: CipherAlgorithm,\n    key: Buffer,\n    iv: Buffer,\n    data: Buffer\n  ): Promise<Buffer> {\n    let algo: string;\n    let length: number;\n    if (algorithm === 'aes-128-cbc') {\n      algo = 'AES-CBC';\n      length = 128;\n    } else if (algorithm === 'aes-256-cbc') {\n      algo = 'AES-CBC';\n      length = 256;\n    } else {\n      throw new Error(`Unsupported cipher algorithm \"${algorithm}\"`);\n    }\n    const cryptoKey = await this.subtleCrypto.importKey('raw', key, { name: algo, length }, false, [\n      'decrypt',\n    ]);\n    const result = await this.subtleCrypto.decrypt({ name: algo, iv }, cryptoKey, data);\n    return Buffer.from(result);\n  }\n}\n\nexport async function createCipher(): Promise<AesCipher> {\n  const cryptoLib = await getCryptoLib();\n  if (cryptoLib.name === 'subtleCrypto') {\n    return new WebCryptoAesCipher(cryptoLib.lib);\n  } else {\n    return new NodeCryptoAesCipher(cryptoLib.lib.createCipheriv, cryptoLib.lib.createDecipheriv);\n  }\n}\n","import { Buffer } from '@stacks/common';\nimport { getCryptoLib } from './cryptoUtils';\n\nexport interface Hmac {\n  digest(key: Buffer, data: Buffer): Promise<Buffer>;\n}\n\ntype NodeCryptoCreateHmac = typeof import('crypto').createHmac;\n\nexport class NodeCryptoHmacSha256 implements Hmac {\n  createHmac: NodeCryptoCreateHmac;\n\n  constructor(createHmac: NodeCryptoCreateHmac) {\n    this.createHmac = createHmac;\n  }\n\n  async digest(key: Buffer, data: Buffer): Promise<Buffer> {\n    const result = this.createHmac('sha256', key).update(data).digest();\n    return Promise.resolve(result);\n  }\n}\n\nexport class WebCryptoHmacSha256 implements Hmac {\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async digest(key: Buffer, data: Buffer): Promise<Buffer> {\n    const cryptoKey = await this.subtleCrypto.importKey(\n      'raw',\n      key,\n      { name: 'HMAC', hash: 'SHA-256' },\n      true,\n      ['sign']\n    );\n    const sig = await this.subtleCrypto.sign(\n      // The `hash` is only specified for non-compliant browsers like Edge.\n      { name: 'HMAC', hash: 'SHA-256' },\n      cryptoKey,\n      data\n    );\n    return Buffer.from(sig);\n  }\n}\n\nexport async function createHmacSha256(): Promise<Hmac> {\n  const cryptoLib = await getCryptoLib();\n  if (cryptoLib.name === 'subtleCrypto') {\n    return new WebCryptoHmacSha256(cryptoLib.lib);\n  } else {\n    return new NodeCryptoHmacSha256(cryptoLib.lib.createHmac);\n  }\n}\n","import { Buffer } from './utils';\nexport function privateKeyToBuffer(privateKey) {\n    const privateKeyBuffer = Buffer.isBuffer(privateKey)\n        ? privateKey\n        : Buffer.from(privateKey, 'hex');\n    if (privateKeyBuffer.length != 32 && privateKeyBuffer.length != 33) {\n        throw new Error(`Improperly formatted private-key. Private-key byte length should be 32 or 33. Length provided: ${privateKeyBuffer.length}`);\n    }\n    if (privateKeyBuffer.length == 33 && privateKeyBuffer[32] !== 1) {\n        throw new Error('Improperly formatted private-key. 33 bytes indicate compressed key, but the last byte must be == 01');\n    }\n    return privateKeyBuffer;\n}\n//# sourceMappingURL=keys.js.map","export var ChainID;\n(function (ChainID) {\n    ChainID[ChainID[\"Testnet\"] = 2147483648] = \"Testnet\";\n    ChainID[ChainID[\"Mainnet\"] = 1] = \"Mainnet\";\n})(ChainID || (ChainID = {}));\nexport var TransactionVersion;\n(function (TransactionVersion) {\n    TransactionVersion[TransactionVersion[\"Mainnet\"] = 0] = \"Mainnet\";\n    TransactionVersion[TransactionVersion[\"Testnet\"] = 128] = \"Testnet\";\n})(TransactionVersion || (TransactionVersion = {}));\nexport const PRIVATE_KEY_COMPRESSED_LENGTH = 33;\nexport const PRIVATE_KEY_UNCOMPRESSED_LENGTH = 32;\nexport const BLOCKSTACK_DEFAULT_GAIA_HUB_URL = 'https://hub.blockstack.org';\n//# sourceMappingURL=constants.js.map","// Extracted from https://github.com/crypto-browserify/ripemd160\nconst ARRAY16 = new Array(16);\nconst zl = initU8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n    3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n    1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n    4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]);\nconst zr = initU8Array([\n    5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n    6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n    15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n    8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n    12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]);\nconst sl = initU8Array([\n    11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n    7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n    11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n    11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n    9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]);\nconst sr = initU8Array([\n    8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n    9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n    9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n    15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n    8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]);\nconst hl = initU32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst hr = initU32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\nfunction rotl(x, n) {\n    return (x << n) | (x >>> (32 - n));\n}\nfunction fn1(a, b, c, d, e, m, k, s) {\n    return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0;\n}\nfunction fn2(a, b, c, d, e, m, k, s) {\n    return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0;\n}\nfunction fn3(a, b, c, d, e, m, k, s) {\n    return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0;\n}\nfunction fn4(a, b, c, d, e, m, k, s) {\n    return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0;\n}\nfunction fn5(a, b, c, d, e, m, k, s) {\n    return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0;\n}\nfunction readInt32LE(buffer, offset) {\n    offset >>>= 0;\n    return (buffer[offset])\n        | (buffer[offset + 1] << 8)\n        | (buffer[offset + 2] << 16)\n        | (buffer[offset + 3] << 24);\n}\nfunction writeUInt32LE(buffer, value, offset) {\n    value = +value;\n    offset >>>= 0;\n    buffer[offset + 3] = (value >>> 24);\n    buffer[offset + 2] = (value >>> 16);\n    buffer[offset + 1] = (value >>> 8);\n    buffer[offset] = (value & 0xff);\n    return offset + 4;\n}\nfunction writeInt32LE(buffer, value, offset) {\n    value = +value;\n    offset >>>= 0;\n    buffer[offset] = (value & 0xff);\n    buffer[offset + 1] = (value >>> 8);\n    buffer[offset + 2] = (value >>> 16);\n    buffer[offset + 3] = (value >>> 24);\n    return offset + 4;\n}\nfunction initU32Array(data) {\n    if (typeof Uint32Array !== 'undefined') {\n        return new Uint32Array(data);\n    }\n    else {\n        return data;\n    }\n}\nfunction initU8Array(data) {\n    if (typeof Uint8Array !== 'undefined') {\n        return new Uint8Array(data);\n    }\n    else {\n        return data;\n    }\n}\nfunction createU8Array(size) {\n    if (typeof Uint8Array !== 'undefined') {\n        return new Uint8Array(size);\n    }\n    else {\n        return new Array(size);\n    }\n}\nexport class RIPEMD160 {\n    constructor() {\n        this._block = createU8Array(64);\n        this._blockSize = 64;\n        this._blockOffset = 0;\n        this._length = [0, 0, 0, 0];\n        this._finalized = false;\n        this._a = 0x67452301;\n        this._b = 0xefcdab89;\n        this._c = 0x98badcfe;\n        this._d = 0x10325476;\n        this._e = 0xc3d2e1f0;\n    }\n    update(data) {\n        if (this._finalized)\n            throw new Error('Digest already called');\n        // consume data\n        const block = this._block;\n        let offset = 0;\n        while (this._blockOffset + data.length - offset >= this._blockSize) {\n            for (let i = this._blockOffset; i < this._blockSize;)\n                block[i++] = data[offset++];\n            this._update();\n            this._blockOffset = 0;\n        }\n        while (offset < data.length)\n            block[this._blockOffset++] = data[offset++];\n        // update length\n        for (let j = 0, carry = data.length * 8; carry > 0; ++j) {\n            this._length[j] += carry;\n            carry = (this._length[j] / 0x0100000000) | 0;\n            if (carry > 0)\n                this._length[j] -= 0x0100000000 * carry;\n        }\n        return this;\n    }\n    _update() {\n        const words = ARRAY16;\n        for (let j = 0; j < 16; ++j) {\n            words[j] = readInt32LE(this._block, j * 4);\n        }\n        let al = this._a | 0;\n        let bl = this._b | 0;\n        let cl = this._c | 0;\n        let dl = this._d | 0;\n        let el = this._e | 0;\n        let ar = this._a | 0;\n        let br = this._b | 0;\n        let cr = this._c | 0;\n        let dr = this._d | 0;\n        let er = this._e | 0;\n        // computation\n        for (let i = 0; i < 80; i += 1) {\n            let tl;\n            let tr;\n            if (i < 16) {\n                tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);\n                tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);\n            }\n            else if (i < 32) {\n                tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);\n                tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);\n            }\n            else if (i < 48) {\n                tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);\n                tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);\n            }\n            else if (i < 64) {\n                tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);\n                tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);\n            }\n            else { // if (i<80) {\n                tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);\n                tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);\n            }\n            al = el;\n            el = dl;\n            dl = rotl(cl, 10);\n            cl = bl;\n            bl = tl;\n            ar = er;\n            er = dr;\n            dr = rotl(cr, 10);\n            cr = br;\n            br = tr;\n        }\n        // update state\n        const t = (this._b + cl + dr) | 0;\n        this._b = (this._c + dl + er) | 0;\n        this._c = (this._d + el + ar) | 0;\n        this._d = (this._e + al + br) | 0;\n        this._e = (this._a + bl + cr) | 0;\n        this._a = t;\n    }\n    digest() {\n        if (this._finalized) {\n            throw new Error('Digest already called');\n        }\n        this._finalized = true;\n        // create padding and handle blocks\n        this._block[this._blockOffset++] = 0x80;\n        if (this._blockOffset > 56) {\n            this._block.fill(0, this._blockOffset, 64);\n            this._update();\n            this._blockOffset = 0;\n        }\n        this._block.fill(0, this._blockOffset, 56);\n        writeUInt32LE(this._block, this._length[0], 56);\n        writeUInt32LE(this._block, this._length[1], 60);\n        this._update();\n        // produce result\n        const buffer = createU8Array(20);\n        writeInt32LE(buffer, this._a, 0);\n        writeInt32LE(buffer, this._b, 4);\n        writeInt32LE(buffer, this._c, 8);\n        writeInt32LE(buffer, this._d, 12);\n        writeInt32LE(buffer, this._e, 16);\n        // reset state\n        this._block.fill(0);\n        this._blockOffset = 0;\n        for (let i = 0; i < 4; ++i) {\n            this._length[i] = 0;\n        }\n        return buffer;\n    }\n}\nexport default RIPEMD160;\n","import { Buffer } from '@stacks/common';\nimport Ripemd160Polyfill from 'ripemd160-min';\nimport { isNodeCryptoAvailable } from './cryptoUtils';\n\ntype NodeCryptoCreateHash = typeof import('crypto').createHash;\n\nexport interface Ripemd160Digest {\n  digest(data: Buffer): Buffer;\n}\n\nexport class Ripemd160PolyfillDigest implements Ripemd160Digest {\n  digest(data: Buffer): Buffer {\n    const instance = new Ripemd160Polyfill();\n    instance.update(data);\n    const hash = instance.digest();\n    if (Array.isArray(hash)) {\n      return Buffer.from(hash);\n    } else {\n      return Buffer.from(hash.buffer);\n    }\n  }\n}\n\nexport class NodeCryptoRipemd160Digest implements Ripemd160Digest {\n  nodeCryptoCreateHash: NodeCryptoCreateHash;\n\n  constructor(nodeCryptoCreateHash: NodeCryptoCreateHash) {\n    this.nodeCryptoCreateHash = nodeCryptoCreateHash;\n  }\n\n  digest(data: Buffer): Buffer {\n    try {\n      return this.nodeCryptoCreateHash('rmd160').update(data).digest();\n    } catch (error) {\n      try {\n        return this.nodeCryptoCreateHash('ripemd160').update(data).digest();\n      } catch (_err) {\n        console.log(error);\n        console.log(\n          'Node.js `crypto.createHash` exists but failing to digest for ripemd160, falling back to js implementation'\n        );\n        const polyfill = new Ripemd160PolyfillDigest();\n        return polyfill.digest(data);\n      }\n    }\n  }\n}\n\nexport function createHashRipemd160() {\n  const nodeCryptoCreateHash = isNodeCryptoAvailable(nodeCrypto => {\n    if (typeof nodeCrypto.createHash === 'function') {\n      return nodeCrypto.createHash;\n    }\n    return false;\n  });\n  if (nodeCryptoCreateHash) {\n    return new NodeCryptoRipemd160Digest(nodeCryptoCreateHash);\n  } else {\n    return new Ripemd160PolyfillDigest();\n  }\n}\n\nexport function hashRipemd160(data: Buffer) {\n  const hash = createHashRipemd160();\n  return hash.digest(data);\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nexport const shrSH = (h, l, s) => h >>> s;\nexport const shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nexport const rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nexport const rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nexport const rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nexport const rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nexport const rotr32H = (h, l) => l;\nexport const rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nexport const rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nexport const rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nexport const rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nexport const rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nexport const add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nexport const add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nexport const add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nexport const add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nexport const add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nexport const add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n","import { SHA2 } from './_sha2.js';\nimport * as u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\nexport class SHA512 extends SHA2 {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","import { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { Buffer } from '@stacks/common';\nimport { getCryptoLib } from './cryptoUtils';\n\ntype NodeCryptoCreateHash = typeof import('crypto').createHash;\n\nexport interface Sha2Hash {\n  digest(data: Buffer, algorithm?: 'sha256' | 'sha512'): Promise<Buffer>;\n}\n\nexport class NodeCryptoSha2Hash {\n  createHash: NodeCryptoCreateHash;\n\n  constructor(createHash: NodeCryptoCreateHash) {\n    this.createHash = createHash;\n  }\n\n  async digest(data: Buffer, algorithm = 'sha256'): Promise<Buffer> {\n    try {\n      const result = this.createHash(algorithm).update(data).digest();\n      return Promise.resolve(result);\n    } catch (error) {\n      console.log(error);\n      console.log(\n        `Error performing ${algorithm} digest with Node.js 'crypto.createHash', falling back to JS implementation.`\n      );\n      return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n    }\n  }\n}\n\nexport class WebCryptoSha2Hash implements Sha2Hash {\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async digest(data: Buffer, algorithm = 'sha256'): Promise<Buffer> {\n    let algo: string;\n    if (algorithm === 'sha256') {\n      algo = 'SHA-256';\n    } else if (algorithm === 'sha512') {\n      algo = 'SHA-512';\n    } else {\n      throw new Error(`Unsupported hash algorithm ${algorithm}`);\n    }\n    try {\n      const hash = await this.subtleCrypto.digest(algo, data);\n      return Buffer.from(hash);\n    } catch (error) {\n      console.log(error);\n      console.log(\n        `Error performing ${algorithm} digest with WebCrypto, falling back to JS implementation.`\n      );\n      return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));\n    }\n  }\n}\n\nexport async function createSha2Hash(): Promise<Sha2Hash> {\n  const cryptoLib = await getCryptoLib();\n  if (cryptoLib.name === 'subtleCrypto') {\n    return new WebCryptoSha2Hash(cryptoLib.lib);\n  } else {\n    return new NodeCryptoSha2Hash(cryptoLib.lib.createHash);\n  }\n}\n\nexport function hashSha256Sync(data: Buffer) {\n  return Buffer.from(sha256(data));\n}\n\nexport function hashSha512Sync(data: Buffer) {\n  return Buffer.from(sha512(data));\n}\n","import { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { getPublicKey as nobleGetPublicKey, signSync, utils } from '@noble/secp256k1';\nimport { Buffer, privateKeyToBuffer, PRIVATE_KEY_COMPRESSED_LENGTH } from '@stacks/common';\nimport base58 from 'bs58';\nimport { hashRipemd160 } from './hashRipemd160';\nimport { hashSha256Sync } from './sha2Hash';\n\nconst BITCOIN_PUBKEYHASH = 0x00;\n\n/**\n * To use secp256k1.signSync set utils.hmacSha256Sync to a function using noble-hashes\n * secp256k1.signSync is the counter part of secp256k1.sign (async version)\n * secp256k1.signSync is used within signWithKey in this file\n * secp256k1.signSync is used to maintain the semantics of signWithKey while migrating from elliptic lib\n * utils.hmacSha256Sync docs: https://github.com/paulmillr/noble-secp256k1 readme file\n */\nutils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\n/**\n * @ignore\n */\nexport function makeECPrivateKey() {\n  return Buffer.from(utils.randomPrivateKey()).toString('hex');\n}\n\n/**\n * Based on bitcoinjs-lib MIT https://github.com/bitcoinjs/bs58check/blob/12b3e700f355c5c49d0be3f8fc29be6c66e753e9/base.js\n * @ignore\n */\nexport function base58CheckDecode(btcAddress: string): {\n  version: number;\n  hash: Buffer;\n} {\n  const buffer = Buffer.from(base58.decode(btcAddress));\n  const payload = buffer.slice(0, -4);\n  const checksum = buffer.slice(-4);\n  const newChecksum = sha256(sha256(payload));\n\n  if (\n    (checksum[0] ^ newChecksum[0]) |\n    (checksum[1] ^ newChecksum[1]) |\n    (checksum[2] ^ newChecksum[2]) |\n    (checksum[3] ^ newChecksum[3])\n  ) {\n    throw new Error('Invalid checksum');\n  }\n\n  if (payload.length !== 21) throw new TypeError('Invalid address length');\n\n  const version = payload.readUInt8(0);\n  const hash = payload.slice(1);\n\n  return { version, hash };\n}\n\n/**\n * @ignore\n */\nexport function base58Encode(hash: Buffer) {\n  const checksum = sha256(sha256(hash));\n  return base58.encode(Buffer.concat([hash, checksum], hash.length + 4));\n}\n\n/**\n * @ignore\n */\nexport function base58CheckEncode(version: number, hash: Buffer) {\n  return base58Encode(Buffer.from([version, ...hash].slice(0, 21)));\n}\n\n/**\n * @ignore\n */\nexport function publicKeyToAddress(publicKey: string | Buffer) {\n  const publicKeyBuffer = Buffer.isBuffer(publicKey) ? publicKey : Buffer.from(publicKey, 'hex');\n  const publicKeyHash160 = hashRipemd160(hashSha256Sync(publicKeyBuffer));\n  return base58CheckEncode(BITCOIN_PUBKEYHASH, publicKeyHash160);\n}\n\n/**\n * @ignore\n * @returns a compressed public key\n */\nexport function getPublicKeyFromPrivate(privateKey: string | Buffer) {\n  const privateKeyBuffer = privateKeyToBuffer(privateKey);\n  // for backwards compatibility we always return a compressed public key, regardless of private key mode\n  return Buffer.from(nobleGetPublicKey(privateKeyBuffer.slice(0, 32), true)).toString('hex');\n}\n\n/**\n * @ignore\n */\nexport function ecSign(messageHash: Buffer, hexPrivateKey: string | Buffer) {\n  return Buffer.from(\n    signSync(messageHash, privateKeyToBuffer(hexPrivateKey).slice(0, 32), {\n      der: false,\n    })\n  );\n}\n\n/**\n * @ignore\n */\nexport function ecPrivateKeyToHexString(privateKey: Buffer): string {\n  return privateKey.toString('hex');\n}\n\n/**\n * @ignore\n */\nexport function isValidPrivateKey(privateKey: string | Buffer): boolean {\n  return utils.isValidPrivateKey(privateKeyToBuffer(privateKey));\n}\n\n/**\n * @ignore\n */\nexport function compressPrivateKey(privateKey: string | Buffer): Buffer {\n  const privateKeyBuffer = privateKeyToBuffer(privateKey);\n\n  return privateKeyBuffer.length == PRIVATE_KEY_COMPRESSED_LENGTH\n    ? privateKeyBuffer // leave compressed\n    : Buffer.concat([privateKeyBuffer, Buffer.from([1])]); // compress\n}\n","import { sha256 } from '@noble/hashes/sha256';\nimport { Buffer } from '@stacks/common';\nimport { decode, encode, encodingLength } from 'varuint-bitcoin';\n\n// 'Stacks Message Signing:\\n'.length //  = 24\n// 'Stacks Message Signing:\\n'.length.toString(16) //  = 18\nconst chainPrefix = '\\x18Stacks Message Signing:\\n';\n\nexport function hashMessage(message: string): Buffer {\n  return Buffer.from(sha256(encodeMessage(message)));\n}\n\nexport function encodeMessage(message: string | Buffer): Buffer {\n  const encoded = encode(Buffer.from(message).length);\n  return Buffer.concat([Buffer.from(chainPrefix), encoded, Buffer.from(message)]);\n}\n\nexport function decodeMessage(encodedMessage: Buffer): Buffer {\n  // Remove the chain prefix: 1 for the varint and 24 for the length of the string\n  // 'Stacks Message Signing:\\n'\n  const messageWithoutChainPrefix = encodedMessage.subarray(1 + 24);\n  const decoded = decode(messageWithoutChainPrefix);\n  const varIntLength = encodingLength(decoded);\n  // Remove the varint prefix\n  return messageWithoutChainPrefix.slice(varIntLength);\n}\n","import { Signature, verify } from '@noble/secp256k1';\n\nexport { Signature, verify as verifySignature };\n\n/**\n * Calculate the AES-CBC ciphertext output byte length a given input length.\n * AES has a fixed block size of 16-bytes regardless key size.\n * @ignore\n */\nexport function getAesCbcOutputLength(inputByteLength: number) {\n  // AES-CBC block mode rounds up to the next block size.\n  const cipherTextLength = (Math.floor(inputByteLength / 16) + 1) * 16;\n  return cipherTextLength;\n}\n\n/**\n * Calculate the base64 encoded string length for a given input length.\n * This is equivalent to the byte length when the string is ASCII or UTF8-8\n * encoded.\n * @param number\n */\nexport function getBase64OutputLength(inputByteLength: number) {\n  const encodedLength = Math.ceil(inputByteLength / 3) * 4;\n  return encodedLength;\n}\n\n/**\n *\n * @ignore\n */\nexport function hashCode(string: string) {\n  let hash = 0;\n  if (string.length === 0) return hash;\n  for (let i = 0; i < string.length; i++) {\n    const character = string.charCodeAt(i);\n    hash = (hash << 5) - hash + character;\n    hash &= hash;\n  }\n  return hash & 0x7fffffff;\n}\n","import { hmac } from '@noble/hashes/hmac';\nimport { sha256 } from '@noble/hashes/sha256';\nimport {\n  getPublicKey,\n  getSharedSecret,\n  Point,\n  Signature,\n  signSync,\n  utils,\n  verify,\n} from '@noble/secp256k1';\nimport {\n  Buffer,\n  bytesToHex,\n  concatBytes,\n  FailedDecryptionError,\n  hexToBigInt,\n  hexToBytes,\n  parseRecoverableSignatureVrs,\n  signatureRsvToVrs,\n  toBuffer,\n} from '@stacks/common';\nimport { createCipher } from './aesCipher';\nimport { createHmacSha256 } from './hmacSha256';\nimport { getPublicKeyFromPrivate } from './keys';\nimport { hashMessage } from './messageSignature';\nimport { hashSha256Sync, hashSha512Sync } from './sha2Hash';\nimport { getAesCbcOutputLength, getBase64OutputLength } from './utils';\n\n/**\n * To use secp256k1.signSync set utils.hmacSha256Sync to a function using noble-hashes\n * secp256k1.signSync is the counter part of secp256k1.sign (async version)\n * secp256k1.signSync is used within signECDSA in this file\n * secp256k1.signSync is used to maintain the semantics of signECDSA while migrating from elliptic lib\n * utils.hmacSha256Sync docs: https://github.com/paulmillr/noble-secp256k1 readme file\n */\nutils.hmacSha256Sync = (key: Uint8Array, ...msgs: Uint8Array[]) => {\n  const h = hmac.create(sha256, key);\n  msgs.forEach(msg => h.update(msg));\n  return h.digest();\n};\n\n/**\n * Controls how the encrypted data buffer will be encoded as a string in the JSON payload.\n * Options:\n *    `hex` -- the legacy default, file size increase 100% (2x).\n *    `base64` -- file size increased ~33%.\n * @ignore\n */\nexport type CipherTextEncoding = 'hex' | 'base64';\n\n/**\n * @ignore\n */\nexport type CipherObject = {\n  iv: string;\n  ephemeralPK: string;\n  cipherText: string;\n  /** If undefined then hex encoding is used for the `cipherText` string. */\n  cipherTextEncoding?: CipherTextEncoding;\n  mac: string;\n  wasString: boolean;\n};\n\n/**\n * @ignore\n */\nexport type SignedCipherObject = {\n  /** Hex encoded DER signature (up to 144 chars) */\n  signature: string;\n  /** Hex encoded public key (66 char length) */\n  publicKey: string;\n  /** The stringified json of a `CipherObject` */\n  cipherText: string;\n};\n\n/**\n * @ignore\n */\nexport enum InvalidPublicKeyReason {\n  InvalidFormat = 'InvalidFormat',\n  IsNotPoint = 'IsNotPoint',\n}\n\n/**\n * @ignore\n */\nexport async function aes256CbcEncrypt(\n  iv: Buffer,\n  key: Buffer,\n  plaintext: Buffer\n): Promise<Buffer> {\n  const cipher = await createCipher();\n  const result = await cipher.encrypt('aes-256-cbc', key, iv, plaintext);\n  return result;\n}\n\n/**\n * @ignore\n */\nasync function aes256CbcDecrypt(iv: Buffer, key: Buffer, ciphertext: Buffer): Promise<Buffer> {\n  const cipher = await createCipher();\n  const result = await cipher.decrypt('aes-256-cbc', key, iv, ciphertext);\n  return result;\n}\n\n/**\n * @ignore\n */\nasync function hmacSha256(key: Buffer, content: Buffer) {\n  const hmacSha256 = await createHmacSha256();\n  return hmacSha256.digest(key, content);\n}\n\n/**\n * @ignore\n */\nfunction equalConstTime(b1: Buffer, b2: Buffer) {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n  let res = 0;\n  for (let i = 0; i < b1.length; i++) {\n    res |= b1[i] ^ b2[i]; // jshint ignore:line\n  }\n  return res === 0;\n}\n\n/**\n * @ignore\n */\nfunction sharedSecretToKeys(sharedSecret: Buffer): { encryptionKey: Buffer; hmacKey: Buffer } {\n  // generate mac and encryption key from shared secret\n  const hashedSecret = hashSha512Sync(sharedSecret);\n  return {\n    encryptionKey: hashedSecret.slice(0, 32),\n    hmacKey: hashedSecret.slice(32),\n  };\n}\n\n/**\n * @ignore\n */\nfunction allHexChars(maybe: string): boolean {\n  return maybe.match(/^[0-9a-f]+$/i) !== null;\n}\n\n/**\n * @ignore\n */\nfunction isValidPublicKey(pub: string): {\n  result: boolean;\n  reason: string | null;\n  reason_data: string | null;\n} {\n  const invalidFormat = {\n    result: false,\n    reason_data: 'Invalid public key format',\n    reason: InvalidPublicKeyReason.InvalidFormat,\n  };\n  const invalidPoint = {\n    result: false,\n    reason_data: 'Public key is not a point',\n    reason: InvalidPublicKeyReason.IsNotPoint,\n  };\n  if (pub.length !== 66 && pub.length !== 130) return invalidFormat;\n\n  const firstByte = pub.slice(0, 2);\n\n  // uncompressed public key\n  if (pub.length === 130 && firstByte !== '04') return invalidFormat;\n\n  // compressed public key\n  if (pub.length === 66 && firstByte !== '02' && firstByte !== '03') return invalidFormat;\n\n  if (!allHexChars(pub)) return invalidFormat;\n\n  try {\n    // Converts public key to Point\n    const point = Point.fromHex(pub);\n\n    // Verify point on curve is valid if it conforms to equation\n    // Validate the public key\n    // Throws: Point is not on elliptic curve if point is not on curve\n    point.assertValidity();\n\n    // Validation passed\n    return {\n      result: true,\n      reason_data: null,\n      reason: null,\n    };\n  } catch (e) {\n    return invalidPoint;\n  }\n}\n\n/**\n * Hex encodes a 32-byte bigint instance.\n * The result string is zero padded and always 64 characters in length.\n * @ignore\n */\nexport function getHexFromBN(bnInput: bigint): string {\n  const hexOut = bnInput.toString(16);\n  if (hexOut.length === 64) {\n    return hexOut;\n  } else if (hexOut.length < 64) {\n    // pad with leading zeros\n    // the padStart function would require node 9\n    const padding = '0'.repeat(64 - hexOut.length);\n    return `${padding}${hexOut}`;\n  } else {\n    throw new Error('Generated a > 32-byte BN for encryption. Failing.');\n  }\n}\n\n/**\n * Returns a big-endian encoded 32-byte buffer instance.\n * The result Buffer is zero padded and always 32 bytes in length.\n * @ignore\n */\nexport function getBufferFromBN(bnInput: bigint): Buffer {\n  const result = toBuffer(bnInput, 32);\n  if (result.byteLength !== 32) {\n    throw new Error('Failed to generate a 32-byte buffer instance');\n  }\n  return result;\n}\n\n/**\n * Get details about the JSON envelope size overhead for ciphertext payloads.\n * @ignore\n */\nexport function getCipherObjectWrapper(opts: {\n  wasString: boolean;\n  cipherTextEncoding: CipherTextEncoding;\n}): {\n  /** The stringified JSON string of an empty `CipherObject`. */\n  payloadShell: string;\n  /** Total string length of all the `CipherObject` values that always have constant lengths. */\n  payloadValuesLength: number;\n} {\n  // Placeholder structure of the ciphertext payload, used to determine the\n  // stringified JSON overhead length.\n  const shell: CipherObject = {\n    iv: '',\n    ephemeralPK: '',\n    mac: '',\n    cipherText: '',\n    wasString: !!opts.wasString,\n  };\n  if (opts.cipherTextEncoding === 'base64') {\n    shell.cipherTextEncoding = 'base64';\n  }\n  // Hex encoded 16 byte buffer.\n  const ivLength = 32;\n  // Hex encoded, compressed EC pubkey of 33 bytes.\n  const ephemeralPKLength = 66;\n  // Hex encoded 32 byte hmac-sha256.\n  const macLength = 64;\n  return {\n    payloadValuesLength: ivLength + ephemeralPKLength + macLength,\n    payloadShell: JSON.stringify(shell),\n  };\n}\n\n/**\n * Get details about the JSON envelope size overhead for signed ciphertext payloads.\n * @param payloadShell - The JSON stringified empty `CipherObject`\n * @ignore\n */\nexport function getSignedCipherObjectWrapper(payloadShell: string): {\n  /** The stringified JSON string of an empty `SignedCipherObject`. */\n  signedPayloadValuesLength: number;\n  /** Total string length of all the `SignedCipherObject` values\n   * that always have constant lengths */\n  signedPayloadShell: string;\n} {\n  // Placeholder structure of the signed ciphertext payload, used to determine the\n  // stringified JSON overhead length.\n  const shell: SignedCipherObject = {\n    signature: '',\n    publicKey: '',\n    cipherText: payloadShell,\n  };\n  // Hex encoded DER signature, up to 72 byte length.\n  const signatureLength = 144;\n  // Hex encoded 33 byte public key.\n  const publicKeyLength = 66;\n  return {\n    signedPayloadValuesLength: signatureLength + publicKeyLength,\n    signedPayloadShell: JSON.stringify(shell),\n  };\n}\n\n/**\n * Fast function that determines the final ASCII string byte length of the\n * JSON stringified ECIES encrypted payload.\n * @ignore\n */\nexport function eciesGetJsonStringLength(opts: {\n  contentLength: number;\n  wasString: boolean;\n  sign: boolean;\n  cipherTextEncoding: CipherTextEncoding;\n}): number {\n  const { payloadShell, payloadValuesLength } = getCipherObjectWrapper(opts);\n\n  // Calculate the AES output length given the input length.\n  const cipherTextLength = getAesCbcOutputLength(opts.contentLength);\n\n  // Get the encoded string length of the cipherText.\n  let encodedCipherTextLength: number;\n  if (!opts.cipherTextEncoding || opts.cipherTextEncoding === 'hex') {\n    encodedCipherTextLength = cipherTextLength * 2;\n  } else if (opts.cipherTextEncoding === 'base64') {\n    encodedCipherTextLength = getBase64OutputLength(cipherTextLength);\n  } else {\n    throw new Error(`Unexpected cipherTextEncoding \"${opts.cipherTextEncoding}\"`);\n  }\n\n  if (!opts.sign) {\n    // Add the length of the JSON envelope, ciphertext length, and length of const values.\n    return payloadShell.length + payloadValuesLength + encodedCipherTextLength;\n  } else {\n    // Get the signed version of the JSON envelope\n    const { signedPayloadShell, signedPayloadValuesLength } =\n      getSignedCipherObjectWrapper(payloadShell);\n    // Add length of the JSON envelope, ciphertext length, and length of the const values.\n    return (\n      signedPayloadShell.length +\n      signedPayloadValuesLength +\n      payloadValuesLength +\n      encodedCipherTextLength\n    );\n  }\n}\n\n/**\n * Encrypt content to elliptic curve publicKey using ECIES\n * @param publicKey - secp256k1 public key hex string\n * @param content - content to encrypt\n * @return Object containing:\n *  iv (initialization vector, hex encoding),\n *  cipherText (cipher text either hex or base64 encoded),\n *  mac (message authentication code, hex encoded),\n *  ephemeral public key (hex encoded),\n *  wasString (boolean indicating with or not to return a buffer or string on decrypt)\n * @private\n * @ignore\n */\nexport async function encryptECIES(\n  publicKey: string,\n  content: Buffer,\n  wasString: boolean,\n  cipherTextEncoding?: CipherTextEncoding\n): Promise<CipherObject> {\n  const validity = isValidPublicKey(publicKey);\n  if (!validity.result) {\n    throw validity;\n  }\n  const ephemeralPrivateKey = utils.randomPrivateKey();\n  const ephemeralPublicKey = getPublicKey(ephemeralPrivateKey, true);\n  let sharedSecret = getSharedSecret(ephemeralPrivateKey, publicKey, true);\n  // Trim the compressed mode prefix byte\n  sharedSecret = sharedSecret.slice(1);\n  const sharedKeys = sharedSecretToKeys(Buffer.from(sharedSecret));\n  const initializationVector = utils.randomBytes(16);\n\n  const cipherText = await aes256CbcEncrypt(\n    Buffer.from(initializationVector),\n    sharedKeys.encryptionKey,\n    content\n  );\n\n  const macData = concatBytes(initializationVector, ephemeralPublicKey, cipherText);\n  const mac = await hmacSha256(sharedKeys.hmacKey, Buffer.from(macData));\n\n  let cipherTextString: string;\n\n  if (!cipherTextEncoding || cipherTextEncoding === 'hex') {\n    cipherTextString = bytesToHex(cipherText);\n  } else if (cipherTextEncoding === 'base64') {\n    cipherTextString = cipherText.toString('base64');\n  } else {\n    throw new Error(`Unexpected cipherTextEncoding \"${cipherTextEncoding}\"`);\n  }\n\n  const result: CipherObject = {\n    iv: bytesToHex(initializationVector),\n    ephemeralPK: bytesToHex(ephemeralPublicKey),\n    cipherText: cipherTextString,\n    mac: bytesToHex(mac),\n    wasString,\n  };\n  if (cipherTextEncoding && cipherTextEncoding !== 'hex') {\n    result.cipherTextEncoding = cipherTextEncoding;\n  }\n  return result;\n}\n\n/**\n * Decrypt content encrypted using ECIES\n * @param {String} privateKey - secp256k1 private key hex string\n * @param {Object} cipherObject - object to decrypt, should contain:\n *  iv (initialization vector), cipherText (cipher text),\n *  mac (message authentication code), ephemeralPublicKey\n *  wasString (boolean indicating with or not to return a buffer or string on decrypt)\n * @return {Buffer} plaintext\n * @throws {FailedDecryptionError} if unable to decrypt\n * @private\n * @ignore\n */\nexport async function decryptECIES(\n  privateKey: string,\n  cipherObject: CipherObject\n): Promise<Buffer | string> {\n  if (!cipherObject.ephemeralPK) {\n    throw new FailedDecryptionError(\n      'Unable to get public key from cipher object. ' +\n        'You might be trying to decrypt an unencrypted object.'\n    );\n  }\n  const ephemeralPK = cipherObject.ephemeralPK;\n  let sharedSecret = getSharedSecret(privateKey, ephemeralPK, true);\n  // Trim the compressed mode prefix byte\n  sharedSecret = sharedSecret.slice(1);\n  const sharedKeys = sharedSecretToKeys(Buffer.from(sharedSecret));\n  const ivBuffer = hexToBytes(cipherObject.iv);\n\n  let cipherTextBuffer: Buffer;\n\n  if (!cipherObject.cipherTextEncoding || cipherObject.cipherTextEncoding === 'hex') {\n    cipherTextBuffer = Buffer.from(cipherObject.cipherText, 'hex');\n  } else if (cipherObject.cipherTextEncoding === 'base64') {\n    cipherTextBuffer = Buffer.from(cipherObject.cipherText, 'base64');\n  } else {\n    throw new Error(`Unexpected cipherTextEncoding \"${cipherObject.cipherText}\"`);\n  }\n\n  const macData = concatBytes(ivBuffer, hexToBytes(ephemeralPK), cipherTextBuffer);\n  const actualMac = await hmacSha256(sharedKeys.hmacKey, Buffer.from(macData));\n  const expectedMac = hexToBytes(cipherObject.mac);\n\n  if (!equalConstTime(Buffer.from(expectedMac), actualMac)) {\n    throw new FailedDecryptionError('Decryption failed: failure in MAC check');\n  }\n  const plainText = await aes256CbcDecrypt(\n    Buffer.from(ivBuffer),\n    sharedKeys.encryptionKey,\n    cipherTextBuffer\n  );\n\n  if (cipherObject.wasString) {\n    return plainText.toString();\n  } else {\n    return plainText;\n  }\n}\n\n/**\n * Sign content using ECDSA\n *\n * @param {String} privateKey - secp256k1 private key hex string\n * @param {Object} content - content to sign\n * @return {Object} contains:\n * signature - Hex encoded DER signature\n * public key - Hex encoded private string taken from privateKey\n * @private\n * @ignore\n */\nexport function signECDSA(\n  privateKey: string,\n  content: string | Buffer\n): {\n  publicKey: string;\n  signature: string;\n} {\n  const contentBuffer = content instanceof Buffer ? content : Buffer.from(content);\n  const publicKey = getPublicKeyFromPrivate(privateKey);\n  const contentHash = hashSha256Sync(contentBuffer);\n  const signature = signSync(contentHash, privateKey);\n\n  return {\n    signature: bytesToHex(signature),\n    publicKey,\n  };\n}\n\n/**\n * @ignore\n */\nfunction getBuffer(content: string | ArrayBuffer | Buffer) {\n  if (content instanceof Buffer) return content;\n  else if (content instanceof ArrayBuffer) return Buffer.from(content);\n  else return Buffer.from(content);\n}\n\n/**\n * Verify content using ECDSA\n * @param {String | Buffer} content - Content to verify was signed\n * @param {String} publicKey - secp256k1 private key hex string\n * @param {String} signature - Hex encoded DER signature\n * @return {Boolean} returns true when signature matches publickey + content, false if not\n * @private\n * @ignore\n */\nexport function verifyECDSA(\n  content: string | ArrayBuffer | Buffer,\n  publicKey: string,\n  signature: string\n): boolean {\n  const contentBuffer = getBuffer(content);\n  const contentHash = hashSha256Sync(contentBuffer);\n  return verify(signature, contentHash, publicKey);\n}\n\ninterface VerifyMessageSignatureArgs {\n  signature: string;\n  message: string | Buffer;\n  publicKey: string;\n}\n\n/**\n * Verify message signature with recoverable public key\n * @deprecated The Clarity compatible {@link verifyMessageSignatureRsv} is preferred\n */\nexport function verifyMessageSignature({\n  signature,\n  message,\n  publicKey,\n}: VerifyMessageSignatureArgs): boolean {\n  // todo: remove method and pull body to `verifyMessageSignatureRsv`\n  const { r, s } = parseRecoverableSignatureVrs(signature);\n  const sig = new Signature(hexToBigInt(r), hexToBigInt(s));\n  const hashedMsg = typeof message === 'string' ? hashMessage(message) : message;\n  return verify(sig, hashedMsg, publicKey);\n}\n\n/**\n * Verifies a Clarity compatible signed message using a public key. The\n * `signature` option needs to be in RSV format.\n */\nexport function verifyMessageSignatureRsv({\n  signature,\n  message,\n  publicKey,\n}: VerifyMessageSignatureArgs): boolean {\n  return verifyMessageSignature({\n    signature: signatureRsvToVrs(signature),\n    message,\n    publicKey,\n  });\n}\n","import { Buffer } from '@stacks/common';\nimport { utils } from '@noble/secp256k1';\n\n/**\n * Use utils.randomBytes to replace randombytes dependency\n * Generates a buffer with random bytes of given length\n * @param {bytesLength} an optional bytes length, default is 32 bytes\n * @return {Buffer} For return type compatibility converting utils.randomBytes return value to buffer\n */\nexport const randomBytes = (bytesLength?: number) => Buffer.from(utils.randomBytes(bytesLength));\n\n/** Optional function to generate cryptographically secure random bytes */\nexport type GetRandomBytes = (count: number) => Buffer;\n","import { Buffer } from '@stacks/common';\nimport { getCryptoLib } from './cryptoUtils';\n\nexport type Pbkdf2Digests = 'sha512' | 'sha256';\n\nexport interface Pbkdf2 {\n  derive(\n    password: string,\n    salt: Buffer,\n    iterations: number,\n    keyLength: number,\n    digest: Pbkdf2Digests\n  ): Promise<Buffer>;\n}\n\ntype NodePbkdf2Fn = typeof import('crypto').pbkdf2;\n\nexport class NodeCryptoPbkdf2 implements Pbkdf2 {\n  nodePbkdf2: NodePbkdf2Fn;\n\n  constructor(nodePbkdf2: NodePbkdf2Fn) {\n    this.nodePbkdf2 = nodePbkdf2;\n  }\n\n  async derive(\n    password: string,\n    salt: Buffer,\n    iterations: number,\n    keyLength: number,\n    digest: Pbkdf2Digests\n  ): Promise<Buffer> {\n    if (digest !== 'sha512' && digest !== 'sha256') {\n      throw new Error(`Unsupported digest \"${digest}\" for Pbkdf2`);\n    }\n    return new Promise((resolve, reject) => {\n      this.nodePbkdf2(password, salt, iterations, keyLength, digest, (error, result) => {\n        if (error) {\n          reject(error);\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport class WebCryptoPbkdf2 implements Pbkdf2 {\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async derive(\n    password: string,\n    salt: Buffer,\n    iterations: number,\n    keyLength: number,\n    digest: Pbkdf2Digests\n  ): Promise<Buffer> {\n    let algo: string;\n    if (digest === 'sha256') {\n      algo = 'SHA-256';\n    } else if (digest === 'sha512') {\n      algo = 'SHA-512';\n    } else {\n      throw new Error(`Unsupported Pbkdf2 digest algorithm \"${digest}\"`);\n    }\n    let result: ArrayBuffer;\n    const passwordBytes = Buffer.from(password, 'utf8');\n    try {\n      const key = await this.subtleCrypto.importKey('raw', passwordBytes, 'PBKDF2', false, [\n        'deriveBits',\n      ]);\n      result = await this.subtleCrypto.deriveBits(\n        {\n          name: 'PBKDF2',\n          salt,\n          iterations,\n          hash: { name: algo },\n        },\n        key,\n        keyLength * 8\n      );\n    } catch (error) {\n      // Browser appears to support WebCrypto but missing pbkdf2 support.\n      const partialWebCrypto = new WebCryptoPartialPbkdf2(this.subtleCrypto);\n      return partialWebCrypto.derive(password, salt, iterations, keyLength, digest);\n    }\n    return Buffer.from(result);\n  }\n}\n\nexport class WebCryptoPartialPbkdf2 implements Pbkdf2 {\n  // An async implementation for browsers that support WebCrypto hmac\n  // but not pbkdf2. Extracted from crypto-browserify/pbkdf2 and modified to\n  // use WebCrypto for hmac operations.\n  // Original: https://github.com/crypto-browserify/pbkdf2/tree/v3.0.17/lib\n\n  subtleCrypto: SubtleCrypto;\n\n  constructor(subtleCrypto: SubtleCrypto) {\n    this.subtleCrypto = subtleCrypto;\n  }\n\n  async derive(\n    password: string,\n    salt: Buffer,\n    iterations: number,\n    keyLength: number,\n    digest: Pbkdf2Digests\n  ): Promise<Buffer> {\n    if (digest !== 'sha512' && digest !== 'sha256') {\n      throw new Error(`Unsupported digest \"${digest}\" for Pbkdf2`);\n    }\n    const key = Buffer.from(password, 'utf8');\n    const algo = digest === 'sha512' ? 'SHA-512' : 'SHA-256';\n    const algoOpts = { name: 'HMAC', hash: algo };\n    const hmacDigest = (key: ArrayBuffer, data: ArrayBuffer) =>\n      this.subtleCrypto\n        .importKey('raw', key, algoOpts, true, ['sign'])\n        .then(cryptoKey => this.subtleCrypto.sign(algoOpts, cryptoKey, data))\n        .then(result => new Uint8Array(result));\n\n    const DK = new Uint8Array(keyLength);\n    const saltLength = salt.length;\n    const block1 = new Uint8Array(saltLength + 4);\n    block1.set(salt);\n    let destPos = 0;\n    const hLen = digest === 'sha512' ? 64 : 32;\n    const l = Math.ceil(keyLength / hLen);\n\n    function writeUInt32BE(data: Uint8Array, value: number, offset: number) {\n      value = +value;\n      offset >>>= 0;\n      data[offset] = value >>> 24;\n      data[offset + 1] = value >>> 16;\n      data[offset + 2] = value >>> 8;\n      data[offset + 3] = value & 0xff;\n      return offset + 4;\n    }\n\n    for (let i = 1; i <= l; i++) {\n      writeUInt32BE(block1, i, saltLength);\n      const T = await hmacDigest(key, block1);\n      let U = T;\n      for (let j = 1; j < iterations; j++) {\n        U = await hmacDigest(key, U);\n        for (let k = 0; k < hLen; k++) {\n          T[k] ^= U[k];\n        }\n      }\n      DK.set(T.subarray(0, DK.byteLength - destPos), destPos);\n      destPos += hLen;\n    }\n    return Buffer.from(DK.buffer);\n  }\n}\n\nexport async function createPbkdf2(): Promise<Pbkdf2> {\n  const cryptoLib = await getCryptoLib();\n  if (cryptoLib.name === 'subtleCrypto') {\n    return new WebCryptoPbkdf2(cryptoLib.lib);\n  } else {\n    return new NodeCryptoPbkdf2(cryptoLib.lib.pbkdf2);\n  }\n}\n","import { Buffer } from '@stacks/common';\n// https://github.com/paulmillr/scure-bip39\n// Secure, audited & minimal implementation of BIP39 mnemonic phrases.\nimport { validateMnemonic, mnemonicToEntropy, entropyToMnemonic } from '@scure/bip39';\n// Word lists not imported by default as that would increase bundle sizes too much as in case of bitcoinjs/bip39\n// Use default english world list similiar to bitcoinjs/bip39\n// Backward compatible with bitcoinjs/bip39 dependency\n// Very small in size as compared to bitcoinjs/bip39 wordlist\n// Reference: https://github.com/paulmillr/scure-bip39\nimport { wordlist } from '@scure/bip39/wordlists/english';\nimport { randomBytes, GetRandomBytes } from './cryptoRandom';\nimport { createSha2Hash } from './sha2Hash';\nimport { createHmacSha256 } from './hmacSha256';\nimport { createCipher } from './aesCipher';\nimport { createPbkdf2 } from './pbkdf2';\nimport { TriplesecDecryptSignature } from './cryptoUtils';\n\n/**\n * Encrypt a raw mnemonic phrase to be password protected\n * @param {string} phrase - Raw mnemonic phrase\n * @param {string} password - Password to encrypt mnemonic with\n * @return {Promise<Buffer>} The encrypted phrase\n * @private\n * @ignore\n * */\nexport async function encryptMnemonic(\n  phrase: string,\n  password: string,\n  opts?: {\n    getRandomBytes?: GetRandomBytes;\n  }\n): Promise<Buffer> {\n  // hex encoded mnemonic string\n  let mnemonicEntropy: string;\n  try {\n    // must be bip39 mnemonic\n    // `mnemonicToEntropy` converts mnemonic string to raw entropy in form of byte array\n    const entropyBytes = mnemonicToEntropy(phrase, wordlist);\n    // Convert byte array to hex string\n    mnemonicEntropy = Buffer.from(entropyBytes).toString('hex');\n  } catch (error) {\n    console.error('Invalid mnemonic phrase provided');\n    console.error(error);\n    throw new Error('Not a valid bip39 mnemonic');\n  }\n\n  // normalize plaintext to fixed length byte string\n  const plaintextNormalized = Buffer.from(mnemonicEntropy, 'hex');\n\n  // AES-128-CBC with SHA256 HMAC\n  const pbkdf2 = await createPbkdf2();\n  let salt: Buffer;\n  if (opts && opts.getRandomBytes) {\n    salt = opts.getRandomBytes(16);\n  } else {\n    salt = randomBytes(16);\n  }\n  const keysAndIV = await pbkdf2.derive(password, salt, 100000, 48, 'sha512');\n  const encKey = keysAndIV.slice(0, 16);\n  const macKey = keysAndIV.slice(16, 32);\n  const iv = keysAndIV.slice(32, 48);\n\n  const cipher = await createCipher();\n  const cipherText = await cipher.encrypt('aes-128-cbc', encKey, iv, plaintextNormalized);\n\n  const hmacPayload = Buffer.concat([salt, cipherText]);\n  const hmacSha256 = await createHmacSha256();\n  const hmacDigest = await hmacSha256.digest(macKey, hmacPayload);\n\n  const payload = Buffer.concat([salt, hmacDigest, cipherText]);\n  return payload;\n}\n\n// Used to distinguish bad password during decrypt vs invalid format\nclass PasswordError extends Error {}\n\n/**\n * @ignore\n */\nasync function decryptMnemonicBuffer(dataBuffer: Buffer, password: string): Promise<string> {\n  const salt = dataBuffer.slice(0, 16);\n  const hmacSig = dataBuffer.slice(16, 48); // 32 bytes\n  const cipherText = dataBuffer.slice(48);\n  const hmacPayload = Buffer.concat([salt, cipherText]);\n\n  const pbkdf2 = await createPbkdf2();\n  const keysAndIV = await pbkdf2.derive(password, salt, 100000, 48, 'sha512');\n  const encKey = keysAndIV.slice(0, 16);\n  const macKey = keysAndIV.slice(16, 32);\n  const iv = keysAndIV.slice(32, 48);\n\n  const decipher = await createCipher();\n  const decryptedResult = await decipher.decrypt('aes-128-cbc', encKey, iv, cipherText);\n\n  const hmacSha256 = await createHmacSha256();\n  const hmacDigest = await hmacSha256.digest(macKey, hmacPayload);\n\n  // hash both hmacSig and hmacDigest so string comparison time\n  // is uncorrelated to the ciphertext\n  const sha2Hash = await createSha2Hash();\n  const hmacSigHash = await sha2Hash.digest(hmacSig);\n  const hmacDigestHash = await sha2Hash.digest(hmacDigest);\n\n  if (!hmacSigHash.equals(hmacDigestHash)) {\n    // not authentic\n    throw new PasswordError('Wrong password (HMAC mismatch)');\n  }\n\n  let mnemonic: string;\n  try {\n    // Converts raw entropy in form of byte array to mnemonic string\n    mnemonic = entropyToMnemonic(decryptedResult, wordlist);\n  } catch (error) {\n    console.error('Error thrown by `entropyToMnemonic`');\n    console.error(error);\n    throw new PasswordError('Wrong password (invalid plaintext)');\n  }\n  // Validates mnemonic for being 12-24 words contained in `wordlist`\n  if (!validateMnemonic(mnemonic, wordlist)) {\n    throw new PasswordError('Wrong password (invalid plaintext)');\n  }\n\n  return mnemonic;\n}\n\n/**\n * Decrypt legacy triplesec keys\n * @param {Buffer} dataBuffer - The encrypted key\n * @param {String} password - Password for data\n * @return {Promise<Buffer>} Decrypted seed\n * @private\n * @ignore\n */\nfunction decryptLegacy(\n  dataBuffer: Buffer,\n  password: string,\n  triplesecDecrypt?: TriplesecDecryptSignature\n): Promise<Buffer> {\n  return new Promise<Buffer>((resolve, reject) => {\n    if (!triplesecDecrypt) {\n      reject(new Error('The `triplesec.decrypt` function must be provided'));\n    }\n    triplesecDecrypt!(\n      {\n        key: Buffer.from(password),\n        data: dataBuffer,\n      },\n      (err, plaintextBuffer) => {\n        if (!err) {\n          resolve(plaintextBuffer!);\n        } else {\n          reject(err);\n        }\n      }\n    );\n  });\n}\n\n/**\n * Decrypt an encrypted mnemonic phrase with a password.\n * Legacy triplesec encrypted payloads are also supported.\n * @param data - Buffer or hex-encoded string of the encrypted mnemonic\n * @param password - Password for data\n * @return the raw mnemonic phrase\n * @private\n * @ignore\n */\nexport async function decryptMnemonic(\n  data: string | Buffer,\n  password: string,\n  triplesecDecrypt?: TriplesecDecryptSignature\n) {\n  const dataBuffer = Buffer.isBuffer(data) ? data : Buffer.from(data, 'hex');\n  try {\n    return await decryptMnemonicBuffer(dataBuffer, password);\n  } catch (err) {\n    if (err instanceof PasswordError) {\n      throw err;\n    }\n    const data = await decryptLegacy(dataBuffer, password, triplesecDecrypt);\n    return data.toString();\n  }\n}\n","import { Buffer } from '@stacks/common';\nimport {\n  CipherTextEncoding,\n  decryptECIES,\n  encryptECIES,\n  signECDSA,\n  SignedCipherObject,\n} from './ec';\nimport { getPublicKeyFromPrivate } from './keys';\n\nexport interface EncryptionOptions {\n  /**\n   * If set to `true` the data is signed using ECDSA on SHA256 hashes with the user's\n   * app private key. If a string is specified, it is used as the private key instead\n   * of the user's app private key.\n   * @default false\n   */\n  sign?: boolean | string;\n  /**\n   * String encoding format for the cipherText buffer.\n   * Currently defaults to 'hex' for legacy backwards-compatibility.\n   * Only used if the `encrypt` option is also used.\n   * Note: in the future this should default to 'base64' for the significant\n   * file size reduction.\n   */\n  cipherTextEncoding?: CipherTextEncoding;\n  /**\n   * Specifies if the original unencrypted content is a ASCII or UTF-8 string.\n   * For example stringified JSON.\n   * If true, then when the ciphertext is decrypted, it will be returned as\n   * a `string` type variable, otherwise will be returned as a Buffer.\n   */\n  wasString?: boolean;\n}\n\n/**\n * Specify encryption options, and whether to sign the ciphertext.\n */\nexport interface EncryptContentOptions extends EncryptionOptions {\n  /**\n   * Encrypt the data with this key.\n   */\n  publicKey?: string;\n  /**\n   * Encrypt the data with the public key corresponding to the supplied private key\n   */\n  privateKey?: string;\n}\n\n/**\n * Encrypts the data provided with the app public key.\n * @param {String|Buffer} content - data to encrypt\n * @param {Object} [options=null] - options object\n * @param {String} options.publicKey - the hex string of the ECDSA public\n * key to use for encryption. If not provided, will use user's appPublicKey.\n * @return {String} Stringified ciphertext object\n */\nexport async function encryptContent(\n  content: string | Buffer,\n  options?: EncryptContentOptions\n): Promise<string> {\n  const opts = Object.assign({}, options);\n  let privateKey: string | undefined;\n  if (!opts.publicKey) {\n    if (!opts.privateKey) {\n      throw new Error('Either public key or private key must be supplied for encryption.');\n    }\n    opts.publicKey = getPublicKeyFromPrivate(opts.privateKey);\n  }\n  let wasString: boolean;\n  if (typeof opts.wasString === 'boolean') {\n    wasString = opts.wasString;\n  } else {\n    wasString = typeof content === 'string';\n  }\n  const contentBuffer = typeof content === 'string' ? Buffer.from(content) : content;\n  const cipherObject = await encryptECIES(\n    opts.publicKey,\n    contentBuffer,\n    wasString,\n    opts.cipherTextEncoding\n  );\n  let cipherPayload = JSON.stringify(cipherObject);\n  if (opts.sign) {\n    if (typeof opts.sign === 'string') {\n      privateKey = opts.sign;\n    } else if (!privateKey) {\n      privateKey = opts.privateKey;\n    }\n    const signatureObject = signECDSA(privateKey!, cipherPayload);\n    const signedCipherObject: SignedCipherObject = {\n      signature: signatureObject.signature,\n      publicKey: signatureObject.publicKey,\n      cipherText: cipherPayload,\n    };\n    cipherPayload = JSON.stringify(signedCipherObject);\n  }\n  return cipherPayload;\n}\n\n/**\n * Decrypts data encrypted with `encryptContent` with the\n * transit private key.\n * @param {String|Buffer} content - encrypted content.\n * @param {Object} [options=null] - options object\n * @param {String} options.privateKey - the hex string of the ECDSA private\n * key to use for decryption. If not provided, will use user's appPrivateKey.\n * @return {String|Buffer} decrypted content.\n */\nexport function decryptContent(\n  content: string,\n  options?: {\n    privateKey?: string;\n  }\n): Promise<string | Buffer> {\n  const opts = Object.assign({}, options);\n  if (!opts.privateKey) {\n    throw new Error('Private key is required for decryption.');\n  }\n\n  try {\n    const cipherObject = JSON.parse(content);\n    return decryptECIES(opts.privateKey, cipherObject);\n  } catch (err) {\n    if (err instanceof SyntaxError) {\n      throw new Error(\n        'Failed to parse encrypted content JSON. The content may not ' +\n          'be encrypted. If using getFile, try passing { decrypt: false }.'\n      );\n    } else {\n      throw err;\n    }\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","this","Object","defineProperty","value","SHA2","utils_js_1","Hash","constructor","blockLen","outputLen","padOffset","isLE","super","finished","length","pos","destroyed","buffer","Uint8Array","view","createView","update","data","Error","len","toBytes","take","Math","min","set","subarray","process","dataView","roundClean","digestInto","out","fill","i","byteOffset","setBigUint64","_32n","BigInt","_u32_max","wh","Number","wl","h","l","setUint32","oview","get","forEach","v","digest","res","slice","destroy","_cloneInto","to","add5H","add5L","add4H","add4L","add3H","add3L","add","rotlBL","rotlBH","rotlSL","rotlSH","rotr32L","rotr32H","rotrBL","rotrBH","rotrSL","rotrSH","shrSL","shrSH","toBig","split","fromBig","U32_MASK64","n","le","lst","Ah","Uint32Array","Al","s","Bh","Bl","Cl","low","Ch","Dl","Dh","El","Eh","crypto","node","undefined","web","self","hmac","HMAC","hash","_key","assertHash","key","iHash","create","TypeError","pad","oHash","buf","getPrototypeOf","message","pbkdf2Async","pbkdf2","hmac_js_1","pbkdf2Init","_password","_salt","_opts","opts","checkOpts","dkLen","asyncTick","c","assertNumber","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","u","arr","ti","Ti","setInt32","ui","async","asyncLoop","sha256","_sha2_js_1","Maj","a","b","SHA256_K","IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","rotr","s1","T1","T2","wrapConstructor","__createBinding","o","m","k","k2","enumerable","__setModuleDefault","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","sha384","sha512_256","sha512","SHA512","u64","SHA512_Kh","SHA512_Kl","map","SHA512_W_H","SHA512_W_L","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA512_256","SHA384","randomBytes","wrapConstructorWithOpts","assertBytes","assertBool","concatBytes","utf8ToBytes","nextTick","hexToBytes","bytesToHex","u32","u8","crypto_1","byteLength","floor","DataView","word","shift","hexes","Array","from","toString","padStart","str","TextEncoder","encode","isSafeInteger","uint8a","hex","array","j","hexByte","byte","parseInt","isNaN","nodeRequire","require","bind","setImmediate","Promise","resolve","e","setTimeout","iters","tick","cb","ts","Date","now","diff","arrays","every","reduce","bytes","lengths","includes","clone","def","obj","assign","hashConstructor","hashC","tmp","hashCons","msg","bytesLength","getRandomValues","chain","args","wrap","reverse","acc","decode","alphabet","digits","isArray","input","letter","index","indexOf","join","separator","padding","bits","chr","push","end","normalize","fn","convertRadix","d","carry","done","digit","digitBase","stringToBytes","bytesToString","utf8","bech32m","bech32","base58check","base58xmr","base58xrp","base58flickr","base58","base64url","base64","base32crockford","base32hex","base32","base16","utils","gcd","radix2carry","convertRadix2","mask","radix","num","radix2","revPadding","unsafeWrapper","apply","checksum","payload","newChecksum","oldChecksum","toUpperCase","replace","genBase58","abc","XMR_BLOCK_LEN","block","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","charCodeAt","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","lowered","toLowerCase","sepIndex","lastIndexOf","sum","endsWith","actualLength","decodeToBytes","decodeUnsafe","TextDecoder","CODERS","coderTypeError","keys","type","sha256_1","utils_1","base_1","nfkd","assertEntropy","entropy","calcChecksum","bitsLeft","getCoder","wordlist","mnemonicToEntropy","mnemonic","norm","isJapanese","ALPHABET","BASE_MAP","x","charAt","xc","BASE","LEADER","FACTOR","log","iFACTOR","source","psz","zeroes","size","b256","it3","it4","vch","ArrayBuffer","isView","pbegin","pend","b58","it1","it2","repeat","string","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","code","start","output","basex","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","isEncoding","actual","write","fromString","arrayView","isInstance","copy","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","isBuffer","checked","numberIsNaN","fromObject","toPrimitive","assertSize","mustMatch","arguments","loweredCase","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","arrayIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","poolSize","allocUnsafeSlow","_isBuffer","compare","y","list","swap16","swap32","swap64","toLocaleString","equals","inspect","max","trim","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","sym","getMessage","Base","writable","configurable","name","stack","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","base64clean","src","dst","table","i16","BufferBigIntNotDefined","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","copyProps","SafeBuffer","checkUInt53","encodingLength","number","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","definition","g","globalThis","Function","window","prop","r","toStringTag","nmd","paths","children","_0n","_1n","_2n","_3n","_8n","POW_2_256","CURVE","P","Gx","Gy","beta","weistrass","x2","x3","USE_ENDOMORPHISM","JacobianPoint","z","static","p","Point","points","toInv","nums","scratch","inverted","invert","reduceRight","invertBatch","toAffine","toAffineBatch","fromAffine","other","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","negate","double","X3","Y3","Z3","ZERO","HH","HHH","V","subtract","multiplyUnsafe","scalar","normalizeScalar","P0","k1neg","k1","k2neg","splitScalarEndo","k1p","k2p","precomputeWindow","W","windows","base","wNAF","affinePoint","_WINDOW_SIZE","precomputes","pointPrecomputes","normalizeZ","f","windowSize","maxNumber","shiftBy","wbits","pr","cached","multiply","point","fake","f1p","f2p","invZ","iz1","iz2","iz3","ax","ay","WeakMap","_setWindowSize","delete","isShort","bytesToNumber","isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","b2","b3","b6","pow2","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","sqrtMod","isYOdd","assertValidity","ensureBytes","header","fromCompressedHex","fromUncompressedHex","privateKey","normalizePrivateKey","msgHash","signature","recovery","truncateHash","normalizeSignature","R","fromHex","numTo32bStr","rinv","u1","u2","Q","multiplyAndAddUnsafe","toRawBytes","isCompressed","toHex","toHexX","toRawX","left","aP","bQ","sliceDER","parseDERInt","Signature","isUint8a","hexToNumber","sBytes","rBytesLeft","parseDERSignature","fromDER","isWithinCurveOrder","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","numberToHexUnpadded","rHex","rLen","sLen","toCompactRawBytes","toCompactHex","power","modulo","q","divNearest","POW_2_128","a1","b1","a2","c1","c2","delta","HmacDrbg","counter","values","hmacSha256","hmacSync","hmacSha256Sync","incr","seed","reseedSync","generateSync","kmdToSig","kBytes","sig","normalizePublicKey","publicKey","fromCompact","getPublicKey","fromPrivateKey","isPub","item","getSharedSecret","privateA","publicB","bits2int","bits2octets","z1","z2","int2octets","signSync","privKey","extraEntropy","h1","seedArgs","initSigArgs","drbg","recSig","canonical","der","recovered","hashed","finalizeSig","vopts","strict","verify","sinv","isValidPrivateKey","hashToPrivateKey","numTo32b","randomPrivateKey","subtle","createHash","messages","ckey","importKey","sign","createHmac","sha256Sync","precompute","AvailableBufferModule","hexToBigInt","toBuffer","integer","lengthBytes","signed","parsedValue","startsWith","SyntaxError","bn","width","nthBit","fromTwos","intToBigInt","intToHex","_","ERROR_CODES","MISSING_PARAMETER","REMOTE_SERVICE_ERROR","INVALID_STATE","NO_SESSION_DATA","DOES_NOT_EXIST","FAILED_DECRYPTION_ERROR","INVALID_DID_ERROR","NOT_ENOUGH_FUNDS_ERROR","INVALID_AMOUNT_ERROR","LOGIN_FAILED_ERROR","SIGNATURE_VERIFICATION_ERROR","CONFLICT_ERROR","NOT_ENOUGH_PROOF_ERROR","BAD_PATH_ERROR","VALIDATION_ERROR","PAYLOAD_TOO_LARGE_ERROR","PRECONDITION_FAILED_ERROR","UNKNOWN","freeze","BlockstackError","bugDetails","parameter","FailedDecryptionError","signatureRsvToVrs","getCryptoLib","lib","NodeCryptoAesCipher","createDecipher","createCipher","algorithm","iv","cipher","final","WebCryptoAesCipher","subtleCrypto","algo","cryptoKey","encrypt","decrypt","cryptoLib","createCipheriv","createDecipheriv","NodeCryptoHmacSha256","WebCryptoHmacSha256","createHmacSha256","privateKeyToBuffer","privateKeyBuffer","ChainID","TransactionVersion","ARRAY16","zl","initU8Array","zr","sl","sr","hl","initU32Array","hr","rotl","fn1","fn2","fn3","fn4","fn5","createU8Array","Ripemd160PolyfillDigest","instance","_block","_blockSize","_blockOffset","_length","_finalized","_a","_b","_c","_d","_e","_update","al","bl","cl","dl","el","ar","br","cr","dr","er","tl","tr","t","NodeCryptoRipemd160Digest","nodeCryptoCreateHash","_err","NodeCryptoSha2Hash","hashSha256Sync","hashSha512Sync","WebCryptoSha2Hash","createSha2Hash","makeECPrivateKey","base58CheckDecode","btcAddress","version","base58Encode","base58CheckEncode","publicKeyToAddress","withFeature","cryptoModule","isNodeCryptoAvailable","nodeCrypto","createHashRipemd160","getPublicKeyFromPrivate","ecSign","messageHash","hexPrivateKey","ecPrivateKeyToHexString","compressPrivateKey","msgs","hashMessage","encodeMessage","encoded","decodeMessage","encodedMessage","messageWithoutChainPrefix","decoded","varIntLength","inputByteLength","ceil","hashCode","InvalidPublicKeyReason","aes256CbcEncrypt","plaintext","content","sharedSecretToKeys","sharedSecret","hashedSecret","encryptionKey","hmacKey","getHexFromBN","bnInput","hexOut","getBufferFromBN","getCipherObjectWrapper","shell","ephemeralPK","mac","cipherText","wasString","cipherTextEncoding","payloadValuesLength","ivLength","payloadShell","JSON","stringify","getSignedCipherObjectWrapper","signedPayloadValuesLength","signatureLength","signedPayloadShell","eciesGetJsonStringLength","cipherTextLength","contentLength","encodedCipherTextLength","encryptECIES","validity","pub","invalidFormat","reason_data","reason","invalidPoint","match","isValidPublicKey","ephemeralPrivateKey","ephemeralPublicKey","sharedKeys","initializationVector","macData","cipherTextString","decryptECIES","cipherObject","ivBuffer","cipherTextBuffer","actualMac","expectedMac","equalConstTime","plainText","ciphertext","aes256CbcDecrypt","signECDSA","contentBuffer","verifyECDSA","getBuffer","verifyMessageSignature","COORDINATE_BYTES","recoveryIdHex","recoveryId","parseRecoverableSignatureVrs","verifyMessageSignatureRsv","NodeCryptoPbkdf2","nodePbkdf2","iterations","keyLength","reject","WebCryptoPbkdf2","passwordBytes","deriveBits","WebCryptoPartialPbkdf2","derive","algoOpts","hmacDigest","then","saltLength","block1","destPos","hLen","T","U","createPbkdf2","encryptMnemonic","phrase","mnemonicEntropy","entropyBytes","plaintextNormalized","getRandomBytes","keysAndIV","encKey","macKey","hmacPayload","PasswordError","decryptMnemonic","triplesecDecrypt","dataBuffer","hmacSig","decipher","decryptedResult","sha2Hash","hmacSigHash","hmacDigestHash","decryptMnemonicBuffer","err","plaintextBuffer","decryptLegacy","encryptContent","options","cipherPayload","signatureObject","signedCipherObject","decryptContent","parse"],"sourceRoot":""}