{"version":3,"file":"ui.esm.js","sources":["../src/ui.ts"],"sourcesContent":["import { authenticate } from './auth';\nimport type { AuthOptions } from './types/auth';\nimport { defineCustomElements } from '@stacks/connect-ui/loader';\nimport { ConnectModal } from '@stacks/connect-ui/dist/components/connect-modal';\nimport { getStacksProvider } from './utils';\n\nexport const showConnect = (authOptions: AuthOptions) => {\n  if (getStacksProvider()) {\n    void authenticate(authOptions);\n    return;\n  }\n  if (typeof window !== undefined) {\n    void defineCustomElements(window);\n    const element = document.createElement('connect-modal');\n    element.authOptions = authOptions;\n    document.body.appendChild(element);\n    const handleEsc = (ev: KeyboardEvent) => {\n      if (ev.key === 'Escape') {\n        document.removeEventListener('keydown', handleEsc);\n        element.remove();\n      }\n    };\n    document.addEventListener('keydown', handleEsc);\n  }\n};\n\nexport const showConnectStatic = (authOptions: AuthOptions) => {\n  if (getStacksProvider()) {\n    void authenticate(authOptions);\n    return;\n  }\n\n  if (typeof window?.customElements?.define === 'function') {\n    // supports custom elements\n    if (customElements.get('connect-modal') === undefined) {\n      // avoid repeat defines\n      customElements.define('connect-modal', ConnectModal);\n    }\n    const element = document.createElement('connect-modal');\n    element.authOptions = authOptions;\n    document.body.appendChild(element);\n    const handleEsc = (ev: KeyboardEvent) => {\n      if (ev.key === 'Escape') {\n        document.removeEventListener('keydown', handleEsc);\n        element.remove();\n      }\n    };\n    document.addEventListener('keydown', handleEsc);\n  }\n};\n\n/**\n * @deprecated Use the renamed `showConnect` method\n */\nexport const showBlockstackConnect = (authOptions: AuthOptions) => showConnect(authOptions);\n"],"names":["showConnect","authOptions","getStacksProvider","authenticate","window","defineCustomElements","element","document","createElement","body","appendChild","handleEsc","ev","key","removeEventListener","remove","addEventListener","showConnectStatic","customElements","define","get","ConnectModal","showBlockstackConnect"],"mappings":";;;;;IAMaA,cAAc,SAAdA,WAAc,CAACC,WAAD,EAA8B;MACnDC,qBAAqB;SAClBC,aAAaF;;;;MAGhB,OAAOG,MAAP,KAAkB,QAAW;SAC1BC,qBAAqBD;QACpBE,UAAUC,SAASC,aAAT,CAAuB,eAAvB;YACRP,cAAcA;aACbQ,KAAKC,YAAYJ;;QACpBK,YAAY,SAAZA,SAAY,CAACC,EAAD,EAAuB;UACnCA,GAAGC,GAAH,KAAW,UAAU;iBACdC,oBAAoB,WAAWH;gBAChCI;;;;aAGHC,iBAAiB,WAAWL;;;IAI5BM,oBAAoB,SAApBA,iBAAoB,CAAChB,WAAD,EAA8B;AAAA;;MACzDC,qBAAqB;SAClBC,aAAaF;;;;MAIhB,mBAAOG,MAAP,8CAAO,QAAQc,cAAf,qBAAO,sBAAwBC,MAA/B,MAA0C,YAAY;QAEpDD,eAAeE,GAAf,CAAmB,eAAnB,MAAwC,QAAW;qBAEtCD,OAAO,iBAAiBE;;;QAEnCf,UAAUC,SAASC,aAAT,CAAuB,eAAvB;YACRP,cAAcA;aACbQ,KAAKC,YAAYJ;;QACpBK,YAAY,SAAZA,SAAY,CAACC,EAAD,EAAuB;UACnCA,GAAGC,GAAH,KAAW,UAAU;iBACdC,oBAAoB,WAAWH;gBAChCI;;;;aAGHC,iBAAiB,WAAWL;;;IAO5BW,wBAAwB,SAAxBA,qBAAwB,CAACrB,WAAD;AAAA,SAA8BD,YAAYC,YAA1C;AAAA;;;;"}